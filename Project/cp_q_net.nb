(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    139789,       2721]
NotebookOptionsPosition[    136174,       2653]
NotebookOutlinePosition[    136528,       2669]
CellTagsIndexPosition[    136485,       2666]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PacletDirectoryAdd", "[", 
  RowBox[{"{", "\"\</Users/ianfan/Downloads/neuralnetworks\>\"", "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "NeuralNetworks`"}], "\[IndentingNewLine]", 
 RowBox[{"Lookup", "[", 
  RowBox[{
   RowBox[{"PacletInformation", "@", "\"\<NeuralNetworks\>\""}], ",", 
   "\"\<Version\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<RLproject-cartpole-q.wl\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\</Users/ianfan/Documents/gym-http-api/binding-wl/gym_http_client.wl\>\"\
", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7396570808765574`*^9, 3.7396570987480593`*^9}, {
   3.739657595767539*^9, 3.7396576009839687`*^9}, {3.7398033822879477`*^9, 
   3.739803384488365*^9}, {3.7399095942951937`*^9, 3.739909607622123*^9}, 
   3.73990982650373*^9, {3.73998979750355*^9, 3.739989797715042*^9}, {
   3.739994337570526*^9, 3.739994340417501*^9}, {3.740001902171492*^9, 
   3.740001903995335*^9}, {3.740083505239258*^9, 3.7400835066376133`*^9}, {
   3.740106127300626*^9, 3.740106129311552*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c079123b-ca29-4765-b33b-6d5df0b9bdca"],

Cell[BoxData["\<\"/Users/ianfan/Documents/gym-http-api/binding-wl\"\>"], \
"Output",
 CellChangeTimes->{
  3.7400738011566887`*^9, 3.740074060057987*^9, 3.740074373808695*^9, {
   3.740074543043749*^9, 3.7400745719217157`*^9}, 3.740074784645339*^9, 
   3.7400750443715353`*^9, 3.740075076579603*^9, 3.740077841191514*^9, 
   3.740077970038443*^9, 3.740079815553897*^9, 3.74007989517061*^9, 
   3.740079967935874*^9, 3.740080047153537*^9, 3.74008032513724*^9, 
   3.7400804618767223`*^9, 3.7400805488534613`*^9, 3.740081133755269*^9, 
   3.740082817406899*^9, 3.740082940312079*^9, 3.7400831442868137`*^9, 
   3.7400831833555317`*^9, 3.740083235597024*^9, {3.740083304068108*^9, 
   3.74008338025836*^9}, {3.740083507289467*^9, 3.740083528973752*^9}, 
   3.740083565792947*^9, 3.740086132423703*^9, 3.7400862017633667`*^9, 
   3.740086305935143*^9, 3.7400867244723*^9, 3.740087164084906*^9, 
   3.7400882100331593`*^9, 3.740088257771806*^9, 3.740093978191677*^9, 
   3.740098146752945*^9, 3.740098191840032*^9, 3.740098275382617*^9, 
   3.740098322118236*^9, 3.740098415170898*^9, 3.740099214818527*^9, 
   3.7400993374218407`*^9, 3.7401010076611423`*^9, 3.740101119308943*^9, {
   3.740103624769651*^9, 3.7401036279013777`*^9}, 3.740103891502551*^9, 
   3.740103984288995*^9, 3.740104083423894*^9, 3.740104183219701*^9, 
   3.7401046525828876`*^9, 3.7401048782599363`*^9, 3.7401049384444513`*^9, 
   3.7401049987978907`*^9, 3.7401052602585297`*^9, 3.740105565703454*^9, 
   3.740105718385161*^9, 3.740106130108715*^9, 3.740106361201336*^9, 
   3.740106796791168*^9, 3.740106928817519*^9, 3.740107008440529*^9, 
   3.7401072014808607`*^9, {3.740107275016206*^9, 3.740107283968955*^9}, 
   3.740107578068349*^9, {3.7401078322854557`*^9, 3.7401078400522823`*^9}, {
   3.7401079320795097`*^9, 3.7401079746667643`*^9}, 3.74010803202192*^9, 
   3.740108068040717*^9, 3.7401081423654537`*^9, 3.7401081970032787`*^9, 
   3.74010823639502*^9, 3.7401082690224867`*^9, 3.740108337488153*^9, 
   3.740108372536552*^9, {3.740108429047092*^9, 3.740108454168069*^9}, 
   3.7401085177891197`*^9, {3.740108550454125*^9, 3.7401086227463627`*^9}, 
   3.740152390779913*^9, 3.74015597361147*^9, 3.7402319611937037`*^9, 
   3.740231993700614*^9, 3.7402320293595247`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4419dea7-d706-41e3-bbe1-79f623ce700d"],

Cell[BoxData[
 RowBox[{"{", "\<\"/Users/ianfan/Downloads/neuralnetworks\"\>", 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7400738011566887`*^9, 3.740074060057987*^9, 3.740074373808695*^9, {
   3.740074543043749*^9, 3.7400745719217157`*^9}, 3.740074784645339*^9, 
   3.7400750443715353`*^9, 3.740075076579603*^9, 3.740077841191514*^9, 
   3.740077970038443*^9, 3.740079815553897*^9, 3.74007989517061*^9, 
   3.740079967935874*^9, 3.740080047153537*^9, 3.74008032513724*^9, 
   3.7400804618767223`*^9, 3.7400805488534613`*^9, 3.740081133755269*^9, 
   3.740082817406899*^9, 3.740082940312079*^9, 3.7400831442868137`*^9, 
   3.7400831833555317`*^9, 3.740083235597024*^9, {3.740083304068108*^9, 
   3.74008338025836*^9}, {3.740083507289467*^9, 3.740083528973752*^9}, 
   3.740083565792947*^9, 3.740086132423703*^9, 3.7400862017633667`*^9, 
   3.740086305935143*^9, 3.7400867244723*^9, 3.740087164084906*^9, 
   3.7400882100331593`*^9, 3.740088257771806*^9, 3.740093978191677*^9, 
   3.740098146752945*^9, 3.740098191840032*^9, 3.740098275382617*^9, 
   3.740098322118236*^9, 3.740098415170898*^9, 3.740099214818527*^9, 
   3.7400993374218407`*^9, 3.7401010076611423`*^9, 3.740101119308943*^9, {
   3.740103624769651*^9, 3.7401036279013777`*^9}, 3.740103891502551*^9, 
   3.740103984288995*^9, 3.740104083423894*^9, 3.740104183219701*^9, 
   3.7401046525828876`*^9, 3.7401048782599363`*^9, 3.7401049384444513`*^9, 
   3.7401049987978907`*^9, 3.7401052602585297`*^9, 3.740105565703454*^9, 
   3.740105718385161*^9, 3.740106130108715*^9, 3.740106361201336*^9, 
   3.740106796791168*^9, 3.740106928817519*^9, 3.740107008440529*^9, 
   3.7401072014808607`*^9, {3.740107275016206*^9, 3.740107283968955*^9}, 
   3.740107578068349*^9, {3.7401078322854557`*^9, 3.7401078400522823`*^9}, {
   3.7401079320795097`*^9, 3.7401079746667643`*^9}, 3.74010803202192*^9, 
   3.740108068040717*^9, 3.7401081423654537`*^9, 3.7401081970032787`*^9, 
   3.74010823639502*^9, 3.7401082690224867`*^9, 3.740108337488153*^9, 
   3.740108372536552*^9, {3.740108429047092*^9, 3.740108454168069*^9}, 
   3.7401085177891197`*^9, {3.740108550454125*^9, 3.7401086227463627`*^9}, 
   3.740152390779913*^9, 3.74015597361147*^9, 3.7402319611937037`*^9, 
   3.740231993700614*^9, 3.740232029470387*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a4e052ff-0a83-4694-9470-e3d3016872e5"],

Cell[BoxData["\<\"11.3.7\"\>"], "Output",
 CellChangeTimes->{
  3.7400738011566887`*^9, 3.740074060057987*^9, 3.740074373808695*^9, {
   3.740074543043749*^9, 3.7400745719217157`*^9}, 3.740074784645339*^9, 
   3.7400750443715353`*^9, 3.740075076579603*^9, 3.740077841191514*^9, 
   3.740077970038443*^9, 3.740079815553897*^9, 3.74007989517061*^9, 
   3.740079967935874*^9, 3.740080047153537*^9, 3.74008032513724*^9, 
   3.7400804618767223`*^9, 3.7400805488534613`*^9, 3.740081133755269*^9, 
   3.740082817406899*^9, 3.740082940312079*^9, 3.7400831442868137`*^9, 
   3.7400831833555317`*^9, 3.740083235597024*^9, {3.740083304068108*^9, 
   3.74008338025836*^9}, {3.740083507289467*^9, 3.740083528973752*^9}, 
   3.740083565792947*^9, 3.740086132423703*^9, 3.7400862017633667`*^9, 
   3.740086305935143*^9, 3.7400867244723*^9, 3.740087164084906*^9, 
   3.7400882100331593`*^9, 3.740088257771806*^9, 3.740093978191677*^9, 
   3.740098146752945*^9, 3.740098191840032*^9, 3.740098275382617*^9, 
   3.740098322118236*^9, 3.740098415170898*^9, 3.740099214818527*^9, 
   3.7400993374218407`*^9, 3.7401010076611423`*^9, 3.740101119308943*^9, {
   3.740103624769651*^9, 3.7401036279013777`*^9}, 3.740103891502551*^9, 
   3.740103984288995*^9, 3.740104083423894*^9, 3.740104183219701*^9, 
   3.7401046525828876`*^9, 3.7401048782599363`*^9, 3.7401049384444513`*^9, 
   3.7401049987978907`*^9, 3.7401052602585297`*^9, 3.740105565703454*^9, 
   3.740105718385161*^9, 3.740106130108715*^9, 3.740106361201336*^9, 
   3.740106796791168*^9, 3.740106928817519*^9, 3.740107008440529*^9, 
   3.7401072014808607`*^9, {3.740107275016206*^9, 3.740107283968955*^9}, 
   3.740107578068349*^9, {3.7401078322854557`*^9, 3.7401078400522823`*^9}, {
   3.7401079320795097`*^9, 3.7401079746667643`*^9}, 3.74010803202192*^9, 
   3.740108068040717*^9, 3.7401081423654537`*^9, 3.7401081970032787`*^9, 
   3.74010823639502*^9, 3.7401082690224867`*^9, 3.740108337488153*^9, 
   3.740108372536552*^9, {3.740108429047092*^9, 3.740108454168069*^9}, 
   3.7401085177891197`*^9, {3.740108550454125*^9, 3.7401086227463627`*^9}, 
   3.740152390779913*^9, 3.74015597361147*^9, 3.7402319611937037`*^9, 
   3.740231993700614*^9, 3.740232034934914*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a54127b0-2540-46ef-9313-710480c8960f"],

Cell[BoxData[
 TemplateBox[{
  "BeginPackage","cxt",
   "\"Invalid context specified at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"BeginPackage\\\", \\\"[\\\", \
\\\"\\\\\\\"RLporject-atair`\\\\\\\"\\\", \\\"]\\\"}]\\). A context must \
consist of valid symbol names separated by and ending with \
\\!\\(\\*RowBox[{\\\"\\\\\\\"`\\\\\\\"\\\"}]\\).\"",2,5,1,
   23405536680415699185,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.740073801309989*^9, 3.74007406023884*^9, 3.74007437405893*^9, {
   3.740074543195635*^9, 3.74007457206553*^9}, 3.7400747849456673`*^9, 
   3.740075044600647*^9, 3.740075076745143*^9, 3.740077841844471*^9, 
   3.740077970323691*^9, 3.740079815968822*^9, 3.740079895365191*^9, 
   3.740079968084799*^9, 3.7400800472877493`*^9, 3.7400803253089314`*^9, 
   3.740080462083301*^9, 3.740080549004695*^9, 3.7400811340848722`*^9, 
   3.7400828206480827`*^9, 3.740082940493086*^9, 3.7400831447043533`*^9, 
   3.7400831835057087`*^9, 3.7400832357447557`*^9, {3.740083304220484*^9, 
   3.740083380412467*^9}, {3.7400835074669733`*^9, 3.740083529126658*^9}, 
   3.740083565939065*^9, 3.7400861328655*^9, 3.740086201937537*^9, 
   3.74008630611029*^9, 3.740086724767984*^9, 3.740087164448841*^9, 
   3.7400882102190237`*^9, 3.740088257960122*^9, 3.74009397860573*^9, 
   3.740098147179384*^9, 3.7400981920274067`*^9, 3.740098275580648*^9, 
   3.740098322369939*^9, 3.740098415346273*^9, 3.740099218137546*^9, 
   3.740099337583562*^9, 3.740101007882547*^9, 3.740101119464838*^9, {
   3.740103625044661*^9, 3.7401036280767717`*^9}, 3.7401038919416523`*^9, 
   3.7401039844745398`*^9, 3.740104083633787*^9, 3.740104183429594*^9, 
   3.740104652909253*^9, 3.740104878648184*^9, 3.740104941104925*^9, 
   3.740104998996965*^9, 3.740105261029047*^9, 3.7401055659031754`*^9, 
   3.740105718579431*^9, 3.740106130457734*^9, 3.740106361466713*^9, 
   3.740106797119226*^9, 3.7401069290998383`*^9, 3.7401070085864162`*^9, 
   3.740107201642255*^9, {3.740107275186912*^9, 3.7401072841024923`*^9}, 
   3.740107578441244*^9, {3.740107832719932*^9, 3.740107840186185*^9}, {
   3.7401079322309303`*^9, 3.740107974806617*^9}, 3.74010803216923*^9, 
   3.74010806820786*^9, 3.740108142513052*^9, 3.740108197157988*^9, 
   3.740108236579461*^9, 3.740108269241049*^9, 3.740108337635344*^9, 
   3.74010837268607*^9, {3.740108429257876*^9, 3.740108454324006*^9}, 
   3.7401085179875593`*^9, {3.7401085505953503`*^9, 3.7401086228968678`*^9}, 
   3.7401523939201527`*^9, 3.740155975617044*^9, 3.740231961330307*^9, 
   3.740231993851516*^9, 3.740232035104088*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f081b4d7-3dcd-43a4-bf76-75158488f155"],

Cell[BoxData[
 TemplateBox[{
  "EndPackage","noctx","\"No previous context defined.\"",2,5,2,
   23405536680415699185,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.740073801309989*^9, 3.74007406023884*^9, 3.74007437405893*^9, {
   3.740074543195635*^9, 3.74007457206553*^9}, 3.7400747849456673`*^9, 
   3.740075044600647*^9, 3.740075076745143*^9, 3.740077841844471*^9, 
   3.740077970323691*^9, 3.740079815968822*^9, 3.740079895365191*^9, 
   3.740079968084799*^9, 3.7400800472877493`*^9, 3.7400803253089314`*^9, 
   3.740080462083301*^9, 3.740080549004695*^9, 3.7400811340848722`*^9, 
   3.7400828206480827`*^9, 3.740082940493086*^9, 3.7400831447043533`*^9, 
   3.7400831835057087`*^9, 3.7400832357447557`*^9, {3.740083304220484*^9, 
   3.740083380412467*^9}, {3.7400835074669733`*^9, 3.740083529126658*^9}, 
   3.740083565939065*^9, 3.7400861328655*^9, 3.740086201937537*^9, 
   3.74008630611029*^9, 3.740086724767984*^9, 3.740087164448841*^9, 
   3.7400882102190237`*^9, 3.740088257960122*^9, 3.74009397860573*^9, 
   3.740098147179384*^9, 3.7400981920274067`*^9, 3.740098275580648*^9, 
   3.740098322369939*^9, 3.740098415346273*^9, 3.740099218137546*^9, 
   3.740099337583562*^9, 3.740101007882547*^9, 3.740101119464838*^9, {
   3.740103625044661*^9, 3.7401036280767717`*^9}, 3.7401038919416523`*^9, 
   3.7401039844745398`*^9, 3.740104083633787*^9, 3.740104183429594*^9, 
   3.740104652909253*^9, 3.740104878648184*^9, 3.740104941104925*^9, 
   3.740104998996965*^9, 3.740105261029047*^9, 3.7401055659031754`*^9, 
   3.740105718579431*^9, 3.740106130457734*^9, 3.740106361466713*^9, 
   3.740106797119226*^9, 3.7401069290998383`*^9, 3.7401070085864162`*^9, 
   3.740107201642255*^9, {3.740107275186912*^9, 3.7401072841024923`*^9}, 
   3.740107578441244*^9, {3.740107832719932*^9, 3.740107840186185*^9}, {
   3.7401079322309303`*^9, 3.740107974806617*^9}, 3.74010803216923*^9, 
   3.74010806820786*^9, 3.740108142513052*^9, 3.740108197157988*^9, 
   3.740108236579461*^9, 3.740108269241049*^9, 3.740108337635344*^9, 
   3.74010837268607*^9, {3.740108429257876*^9, 3.740108454324006*^9}, 
   3.7401085179875593`*^9, {3.7401085505953503`*^9, 3.7401086228968678`*^9}, 
   3.7401523939201527`*^9, 3.740155975617044*^9, 3.740231961330307*^9, 
   3.740231993851516*^9, 3.740232036400712*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b201c9f5-5abb-456b-9ac1-e74f15916783"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Output",
 CellChangeTimes->{
  3.7400738011566887`*^9, 3.740074060057987*^9, 3.740074373808695*^9, {
   3.740074543043749*^9, 3.7400745719217157`*^9}, 3.740074784645339*^9, 
   3.7400750443715353`*^9, 3.740075076579603*^9, 3.740077841191514*^9, 
   3.740077970038443*^9, 3.740079815553897*^9, 3.74007989517061*^9, 
   3.740079967935874*^9, 3.740080047153537*^9, 3.74008032513724*^9, 
   3.7400804618767223`*^9, 3.7400805488534613`*^9, 3.740081133755269*^9, 
   3.740082817406899*^9, 3.740082940312079*^9, 3.7400831442868137`*^9, 
   3.7400831833555317`*^9, 3.740083235597024*^9, {3.740083304068108*^9, 
   3.74008338025836*^9}, {3.740083507289467*^9, 3.740083528973752*^9}, 
   3.740083565792947*^9, 3.740086132423703*^9, 3.7400862017633667`*^9, 
   3.740086305935143*^9, 3.7400867244723*^9, 3.740087164084906*^9, 
   3.7400882100331593`*^9, 3.740088257771806*^9, 3.740093978191677*^9, 
   3.740098146752945*^9, 3.740098191840032*^9, 3.740098275382617*^9, 
   3.740098322118236*^9, 3.740098415170898*^9, 3.740099214818527*^9, 
   3.7400993374218407`*^9, 3.7401010076611423`*^9, 3.740101119308943*^9, {
   3.740103624769651*^9, 3.7401036279013777`*^9}, 3.740103891502551*^9, 
   3.740103984288995*^9, 3.740104083423894*^9, 3.740104183219701*^9, 
   3.7401046525828876`*^9, 3.7401048782599363`*^9, 3.7401049384444513`*^9, 
   3.7401049987978907`*^9, 3.7401052602585297`*^9, 3.740105565703454*^9, 
   3.740105718385161*^9, 3.740106130108715*^9, 3.740106361201336*^9, 
   3.740106796791168*^9, 3.740106928817519*^9, 3.740107008440529*^9, 
   3.7401072014808607`*^9, {3.740107275016206*^9, 3.740107283968955*^9}, 
   3.740107578068349*^9, {3.7401078322854557`*^9, 3.7401078400522823`*^9}, {
   3.7401079320795097`*^9, 3.7401079746667643`*^9}, 3.74010803202192*^9, 
   3.740108068040717*^9, 3.7401081423654537`*^9, 3.7401081970032787`*^9, 
   3.74010823639502*^9, 3.7401082690224867`*^9, 3.740108337488153*^9, 
   3.740108372536552*^9, {3.740108429047092*^9, 3.740108454168069*^9}, 
   3.7401085177891197`*^9, {3.740108550454125*^9, 3.7401086227463627`*^9}, 
   3.740152390779913*^9, 3.74015597361147*^9, 3.7402319611937037`*^9, 
   3.740231993700614*^9, 3.740232036411941*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a2e533df-4e8b-44e1-a4e9-247d2d2f1ffe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"policyNet", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"LinearLayer", "[", "64", "]"}], ",", "Tanh", ",", 
        RowBox[{"LinearLayer", "[", "64", "]"}], ",", "Tanh", ",", 
        RowBox[{"LinearLayer", "[", "2", "]"}]}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", "4"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"preprocess", "[", 
    RowBox[{"game", "[", 
     RowBox[{
     "\"\<WLCartPole\>\"", ",", "10", ",", "10000", ",", "policyNet", ",", 
      "True", ",", "0"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"data", "[", "\"\<action\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.739657691387722*^9, 3.73965769192013*^9}, {
   3.739658713414432*^9, 3.739658714503292*^9}, {3.7398038317694473`*^9, 
   3.7398038591706963`*^9}, {3.739804238533194*^9, 3.7398042523896847`*^9}, {
   3.739804321906131*^9, 3.7398043337190037`*^9}, {3.739807460290304*^9, 
   3.739807460782206*^9}, {3.7398785214845867`*^9, 3.739878526332285*^9}, {
   3.739878565113701*^9, 3.739878565329526*^9}, {3.739878863015192*^9, 
   3.739878865323029*^9}, {3.739880298595665*^9, 3.739880316828409*^9}, {
   3.739880369204712*^9, 3.739880377067739*^9}, {3.7398807728873663`*^9, 
   3.739880773169952*^9}, 3.73989481965034*^9, 3.739988006916205*^9, {
   3.739988162325444*^9, 3.739988162667077*^9}, {3.7399900062729473`*^9, 
   3.739990013673357*^9}, {3.7399930420152884`*^9, 3.739993054355385*^9}, {
   3.739997851689391*^9, 3.739997856263523*^9}, {3.739999140363091*^9, 
   3.7399991455104847`*^9}, {3.7399994366807423`*^9, 3.739999439808052*^9}, {
   3.740001649084234*^9, 3.7400016530488358`*^9}, {3.7400018417701807`*^9, 
   3.740001854702413*^9}, {3.740073176883958*^9, 3.7400732051260653`*^9}, {
   3.740075119880365*^9, 3.740075122530253*^9}, {3.740080737673357*^9, 
   3.740080740730981*^9}, {3.7400812596227903`*^9, 3.740081343651803*^9}, {
   3.740081383335544*^9, 3.7400813960603867`*^9}, {3.740085971149949*^9, 
   3.7400859713385878`*^9}, {3.740105265040401*^9, 3.740105265502803*^9}, {
   3.740109494259536*^9, 3.740109561232051*^9}, {3.740231978639543*^9, 
   3.740231991869441*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"1faf3484-2a13-4f68-b491-90ee0d1c56be"],

Cell[BoxData["109"], "Output",
 CellChangeTimes->{{3.740075123387128*^9, 3.740075132722806*^9}, {
   3.740079970578754*^9, 3.740079975594905*^9}, 3.7400800513286448`*^9, {
   3.740080146657476*^9, 3.740080157520012*^9}, {3.740080333045335*^9, 
   3.740080335984568*^9}, 3.740080742416504*^9, {3.740081262122316*^9, 
   3.740081399637485*^9}, {3.7400828241447783`*^9, 3.74008284594506*^9}, 
   3.74008336654103*^9, {3.740085972493181*^9, 3.740085974236883*^9}, 
   3.740088161126048*^9, 3.740099220545494*^9, {3.740103464516534*^9, 
   3.7401034716253138`*^9}, {3.740103613886066*^9, 3.740103638970016*^9}, 
   3.740103894163155*^9, 3.740103987272029*^9, 3.740104085745826*^9, {
   3.740104185509459*^9, 3.740104187486453*^9}, {3.740104975133038*^9, 
   3.7401050010551443`*^9}, {3.7401050324160223`*^9, 3.740105034809813*^9}, 
   3.7401052670404243`*^9, 3.740105492370453*^9, 3.7401055701791153`*^9, 
   3.740106009160117*^9, {3.740106045465307*^9, 3.740106046679611*^9}, 
   3.740106133690366*^9, {3.7401063876249*^9, 3.740106417047847*^9}, {
   3.740106523345598*^9, 3.740106524539987*^9}, {3.7401076120884953`*^9, 
   3.7401076158799467`*^9}, {3.740108737375074*^9, 3.7401087384307947`*^9}, 
   3.740109429226573*^9, {3.740111387857135*^9, 3.740111414158433*^9}, {
   3.740111451584064*^9, 3.740111466639739*^9}, {3.740111569899269*^9, 
   3.740111571825788*^9}, {3.740137509688216*^9, 3.740137575439725*^9}, 
   3.740152330134852*^9, {3.7401523975643663`*^9, 3.7401524209655027`*^9}, {
   3.7401543007898207`*^9, 3.740154329441649*^9}, 3.7401558760698357`*^9, 
   3.740155907541556*^9, 3.740155977660104*^9, 3.740231995694271*^9, {
   3.7402320371975193`*^9, 3.740232046514851*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"f5a72cac-b3b3-4a3f-b8d1-9ff6e3460516"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained3", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"policyNet", ",", " ", "generator", ",", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "32"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "300"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7397127933350077`*^9, 3.7397127955962667`*^9}, {
   3.739715205371009*^9, 3.739715211830697*^9}, {3.7397158089824133`*^9, 
   3.739715815927814*^9}, {3.739715889099519*^9, 3.7397158955825157`*^9}, {
   3.739799143797586*^9, 3.7397991485607643`*^9}, {3.739804690756454*^9, 
   3.739804695251626*^9}, {3.739907987206678*^9, 3.739907990412608*^9}, {
   3.7399871438988953`*^9, 3.739987145258115*^9}, {3.739990025601199*^9, 
   3.739990027067327*^9}, 3.739994649386158*^9, {3.7399974691401663`*^9, 
   3.739997472668243*^9}, {3.7400008940259533`*^9, 3.740000915832735*^9}, {
   3.7400011329297733`*^9, 3.7400011339782743`*^9}, {3.7400016981810627`*^9, 
   3.740001699146669*^9}, {3.740068470745624*^9, 3.740068477689375*^9}, {
   3.740069276374549*^9, 3.74006927696039*^9}, {3.740072834653874*^9, 
   3.740072835291772*^9}, {3.740073695022006*^9, 3.7400736964951878`*^9}, {
   3.740073729083859*^9, 3.740073729433858*^9}, {3.74007384081039*^9, 
   3.7400738413995256`*^9}, {3.740073959037937*^9, 3.740073959422257*^9}, {
   3.740074166212384*^9, 3.740074166590188*^9}, {3.740075241958418*^9, 
   3.740075247516964*^9}, 3.740078492413718*^9, {3.740080658277379*^9, 
   3.740080662348783*^9}, {3.740081040259218*^9, 3.740081043865514*^9}, {
   3.740081497684477*^9, 3.740081498944386*^9}, {3.740086720204299*^9, 
   3.7400867213383837`*^9}, {3.740086767015091*^9, 3.7400867679231462`*^9}, {
   3.740086824414434*^9, 3.740086825190188*^9}, {3.740103407520569*^9, 
   3.740103425580373*^9}, {3.7401034847800093`*^9, 3.740103498908684*^9}, {
   3.740103643052442*^9, 3.7401036447888412`*^9}, {3.740103915356654*^9, 
   3.74010391673037*^9}, {3.7401042339806128`*^9, 3.7401042348530407`*^9}, {
   3.7401042663503237`*^9, 3.740104308325568*^9}, {3.740104414286714*^9, 
   3.74010441644972*^9}, {3.740104910133709*^9, 3.740104911158805*^9}, {
   3.7401053179493017`*^9, 3.7401053184806833`*^9}, {3.740105871629986*^9, 
   3.740105894518841*^9}, {3.740105999600936*^9, 3.740106031018169*^9}, {
   3.740106062635396*^9, 3.740106084727784*^9}, {3.7401061206614847`*^9, 
   3.740106121127472*^9}, {3.740106369801223*^9, 3.74010637011546*^9}, {
   3.740106427885931*^9, 3.74010644679522*^9}, {3.7401065423961067`*^9, 
   3.740106555302046*^9}, {3.740106821053673*^9, 3.7401068227640867`*^9}, {
   3.740106852942008*^9, 3.7401068535051603`*^9}, {3.740107213418882*^9, 
   3.7401072135973053`*^9}, {3.740107253578143*^9, 3.74010727236665*^9}, 
   3.740107337310863*^9, {3.740107868971246*^9, 3.740107889792362*^9}, {
   3.740108641611699*^9, 3.740108646554866*^9}, {3.740108853157489*^9, 
   3.740108853734679*^9}, {3.7401094353376837`*^9, 3.740109435577094*^9}, {
   3.740111393517332*^9, 3.740111448917502*^9}, {3.740154394293528*^9, 
   3.740154424536955*^9}, {3.7401558713437634`*^9, 3.740155871710423*^9}, {
   3.740155926133897*^9, 3.740155927752112*^9}, {3.740231969957815*^9, 
   3.740231970184805*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"d1ff44ce-5974-408d-a225-6914ca1c3f62"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 64}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739658266619997*^9, 3.739658667460308*^9, 3.739658969344397*^9, 
   3.7396592652120247`*^9, 3.739712818602701*^9, 3.739713100387705*^9, 
   3.739715152069106*^9, 3.739715507590502*^9, 3.739715699322557*^9, 
   3.7397159029773703`*^9, 3.73971603950837*^9, 3.7397161975424023`*^9, 
   3.739716682115303*^9, {3.739716914389793*^9, 3.7397169169286013`*^9}, 
   3.739717054121819*^9, 3.7397170844455643`*^9, 3.739717121898588*^9, 
   3.739734309866666*^9, 3.739734349423464*^9, 3.739734398760713*^9, 
   3.739797842648522*^9, 3.7397979534549437`*^9, 3.739799094033395*^9, 
   3.739799414825823*^9, 3.7398039059359627`*^9, 3.739804150548491*^9, 
   3.7398045785502253`*^9, 3.7398046247911167`*^9, 3.7398046700302763`*^9, 
   3.739805274877768*^9, 3.739805746839237*^9, 3.739805969892365*^9, 
   3.7398063677819767`*^9, 3.7398078499294167`*^9, 3.739807908531043*^9, 
   3.739808944154902*^9, 3.7398946174017353`*^9, 3.739908000598475*^9, 
   3.739908564785597*^9, 3.739983194679079*^9, 3.739987013039345*^9, 
   3.739987128211802*^9, 3.739987164220914*^9, 3.739987246349193*^9, 
   3.739987664331047*^9, 3.7399877854249372`*^9, 3.7399881970655193`*^9, 
   3.7399883783494453`*^9, 3.739989730225317*^9, 3.739990286927343*^9, 
   3.7399909432354927`*^9, 3.739993084135703*^9, 3.739994019898385*^9, 
   3.739994167671236*^9, 3.7399945061854258`*^9, 3.7399946486706057`*^9, 
   3.7399947400237207`*^9, 3.739994880176919*^9, 3.739995417072186*^9, 
   3.739996342315591*^9, 3.7399965639530354`*^9, 3.739997053205717*^9, 
   3.73999725338488*^9, 3.739997638629015*^9, 3.739997815850073*^9, 
   3.739998200174758*^9, 3.7399987362403316`*^9, 3.739999402458744*^9, 
   3.740000718510709*^9, 3.74000107306076*^9, 3.740001364906605*^9, 
   3.740001834712216*^9, 3.7400024908833923`*^9, 3.7400684885900593`*^9, 
   3.740068945500594*^9, 3.740069193578416*^9, 3.740069364521967*^9, 
   3.740069441963519*^9, 3.740069716258073*^9, 3.740069868521538*^9, 
   3.740070245829176*^9, 3.740071012742261*^9, 3.7400715648812237`*^9, 
   3.740071650183543*^9, 3.7400718718036737`*^9, 3.7400720245984917`*^9, 
   3.740072054998247*^9, 3.740072100858026*^9, 3.740072193554035*^9, 
   3.740072438690728*^9, 3.740072595217651*^9, 3.740072682050312*^9, 
   3.74007282866619*^9, 3.740072885200684*^9, 3.74007303033189*^9, 
   3.740073660483879*^9, 3.740073726281767*^9, 3.740073756904619*^9, 
   3.740073833412619*^9, 3.740073953041247*^9, 3.74007398496758*^9, 
   3.740074160791274*^9, 3.740074297600831*^9, 3.740074748496398*^9, 
   3.740074940262995*^9, 3.740075211955701*^9, 3.7400759759942503`*^9, 
   3.740078550338272*^9, 3.740079813434866*^9, 3.740079870424602*^9, 
   3.74007994623808*^9, 3.740080025420232*^9, 3.740080108920026*^9, 
   3.740080212706094*^9, 3.740080297305851*^9, 3.740080383577486*^9, 
   3.7400805143842583`*^9, 3.7400805463639936`*^9, 3.740080603077189*^9, 
   3.740080727635405*^9, 3.740081001422665*^9, 3.740081080286468*^9, 
   3.740081209185832*^9, 3.74008148458926*^9, 3.740081554358141*^9, 
   3.74008289855446*^9, 3.7400829933975077`*^9, {3.740083359325047*^9, 
   3.740083377481448*^9}, 3.740083430737748*^9, 3.740086752422982*^9, 
   3.7400868160938787`*^9, 3.7400869245227547`*^9, 3.74008721634874*^9, 
   3.740088165985182*^9, 3.740099309293007*^9, 3.740099453759961*^9, 
   3.740100701766178*^9, {3.740101005417097*^9, 3.740101035176907*^9}, 
   3.7401014760864277`*^9, {3.740103415657158*^9, 3.740103437760684*^9}, 
   3.740103478893194*^9, 3.7401035250238953`*^9, 3.740103656805122*^9, 
   3.740103905432816*^9, 3.740103943541277*^9, 3.740104017520967*^9, 
   3.740104114613729*^9, 3.7401042273614798`*^9, {3.740104258485734*^9, 
   3.740104298717642*^9}, 3.740104405943598*^9, 3.7401045594787083`*^9, 
   3.740104680265654*^9, 3.7401047109717503`*^9, 3.740104910671983*^9, 
   3.740105024478517*^9, 3.740105059926136*^9, 3.740105299851233*^9, 
   3.740105418675004*^9, 3.740105547400531*^9, 3.740105648291479*^9, 
   3.7401058141021547`*^9, {3.740105889175096*^9, 3.7401058957171164`*^9}, {
   3.740105983876113*^9, 3.740106092978956*^9}, 3.74010618924796*^9, {
   3.740106379948691*^9, 3.740106448155676*^9}, {3.740106527471129*^9, 
   3.740106566124346*^9}, {3.740106812814164*^9, 3.7401068410310287`*^9}, 
   3.740106880751462*^9, 3.740106958637142*^9, 3.7401070371171207`*^9, 
   3.740107214810091*^9, {3.740107251645835*^9, 3.740107256112694*^9}, 
   3.74010728745415*^9, 3.74010735698803*^9, 3.74010760222796*^9, 
   3.7401076369470377`*^9, {3.740107862317618*^9, 3.740107892844198*^9}, {
   3.7401085805799427`*^9, 3.7401086280879383`*^9}, 3.740108688730945*^9, 
   3.740108817175826*^9, 3.740109020397997*^9, 3.740109245826439*^9, 
   3.740109476280555*^9, {3.740111400062584*^9, 3.740111474601342*^9}, 
   3.74011158417375*^9, {3.740137519025733*^9, 3.740137586859721*^9}, 
   3.74015235330252*^9, {3.740152411530608*^9, 3.7401524309586782`*^9}, {
   3.740154308798809*^9, 3.740154337145097*^9}, {3.7401543840782337`*^9, 
   3.740154412839229*^9}, 3.740154622846925*^9, 3.740155894243527*^9, 
   3.740155926588438*^9, 3.740155988361013*^9, 3.7402319722169657`*^9, 
   3.7402320033475657`*^9, 3.740232054091756*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"26211965-9b29-40fd-840c-ff39729dea5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"preprocess", "[", 
    RowBox[{"game", "[", 
     RowBox[{
     "\"\<WLCartPole\>\"", ",", "100", ",", "10000", ",", "trained3", ",", 
      "True", ",", "0"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"data", "[", "\"\<action\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.739996033956787*^9, 3.73999603787962*^9}, {
   3.740067589123006*^9, 3.740067596910446*^9}, {3.740067799150189*^9, 
   3.7400677992881937`*^9}, {3.740067848755768*^9, 3.740067851729871*^9}, {
   3.740068015671008*^9, 3.740068022570307*^9}, {3.740068054773663*^9, 
   3.740068059480804*^9}, {3.7400681107332973`*^9, 3.740068112930297*^9}, 
   3.740068213554366*^9, {3.7400683106427517`*^9, 3.740068337571859*^9}, {
   3.740068963178261*^9, 3.740068974209775*^9}, {3.740069011947525*^9, 
   3.740069014740986*^9}, {3.7400690506267233`*^9, 3.740069053498904*^9}, {
   3.740069220528757*^9, 3.740069221502142*^9}, {3.7400692638382387`*^9, 
   3.740069265713139*^9}, {3.740069368329479*^9, 3.740069369208756*^9}, {
   3.740069459974166*^9, 3.740069460887495*^9}, {3.740069745054422*^9, 
   3.740069769120685*^9}, {3.740069909276029*^9, 3.7400699331778812`*^9}, {
   3.740070015220243*^9, 3.740070099375821*^9}, 3.74007014952253*^9, {
   3.7400702589383507`*^9, 3.74007025996766*^9}, {3.740070291762808*^9, 
   3.740070298605447*^9}, {3.74007034555721*^9, 3.7400703774464808`*^9}, {
   3.740071017260542*^9, 3.740071071906644*^9}, {3.740071104283308*^9, 
   3.740071109741547*^9}, {3.740071149887855*^9, 3.74007117793062*^9}, {
   3.740071287798127*^9, 3.740071298905077*^9}, {3.740071356206584*^9, 
   3.74007135803086*^9}, {3.740071482310584*^9, 3.740071516063959*^9}, {
   3.740071651918131*^9, 3.74007167735601*^9}, {3.740071774572974*^9, 
   3.740071775412171*^9}, {3.740071933850459*^9, 3.740071935348998*^9}, {
   3.74007245517089*^9, 3.740072456018375*^9}, {3.740072601831626*^9, 
   3.740072602722722*^9}, {3.740072907634486*^9, 3.740072908265678*^9}, {
   3.740073035027944*^9, 3.740073035951737*^9}, {3.740073167197741*^9, 
   3.740073167920767*^9}, {3.7400736841268673`*^9, 3.7400736850704613`*^9}, {
   3.740074327670479*^9, 3.740074332096314*^9}, {3.7400747527064466`*^9, 
   3.7400747577309227`*^9}, 3.740075051457995*^9, {3.7400751041978493`*^9, 
   3.740075116834041*^9}, {3.740077753465679*^9, 3.740077753724066*^9}, {
   3.740077937551694*^9, 3.740077939259514*^9}, {3.7400780419728537`*^9, 
   3.740078049028597*^9}, {3.740078108913541*^9, 3.740078130118074*^9}, {
   3.740078556897135*^9, 3.740078573454595*^9}, {3.740080123294406*^9, 
   3.740080139432654*^9}, 3.74008021487059*^9, {3.740080635015518*^9, 
   3.740080648096258*^9}, {3.740081597787756*^9, 3.740081598600045*^9}, {
   3.740082906886468*^9, 3.740082908524374*^9}, {3.740103532435399*^9, 
   3.7401035327351093`*^9}, {3.740103679532289*^9, 3.740103680478517*^9}, {
   3.7401053049208307`*^9, 3.74010530538328*^9}, {3.740105915913163*^9, 
   3.740105931492961*^9}, {3.740106844614642*^9, 3.740106845781385*^9}, {
   3.740108172668811*^9, 3.740108175232832*^9}, {3.740108402911522*^9, 
   3.740108403067885*^9}, {3.7401086327057657`*^9, 3.7401086359828653`*^9}, 
   3.7401088262755136`*^9, {3.740232066565754*^9, 3.740232066928351*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"0494647d-4411-4585-b621-eee85eb9dca4"],

Cell[BoxData["1791"], "Output",
 CellChangeTimes->{{3.74009947119357*^9, 3.740099478000155*^9}, {
   3.7401006021514263`*^9, 3.740100603335086*^9}, 3.7401010373011227`*^9, {
   3.740103214405921*^9, 3.740103215591847*^9}, {3.740103419033546*^9, 
   3.740103442114573*^9}, {3.7401035275588417`*^9, 3.7401035594650593`*^9}, {
   3.740103671256575*^9, 3.740103682256064*^9}, {3.740103908365036*^9, 
   3.740103911595963*^9}, {3.740103946215371*^9, 3.740103947418486*^9}, {
   3.74010402071154*^9, 3.7401040220407333`*^9}, {3.740104117216341*^9, 
   3.740104118414995*^9}, {3.740104229146706*^9, 3.7401042303048153`*^9}, {
   3.740104260847228*^9, 3.740104302496874*^9}, {3.74010440807539*^9, 
   3.740104409813595*^9}, {3.7401046824099092`*^9, 3.740104683691057*^9}, 
   3.740104721108262*^9, {3.740105026769355*^9, 3.7401050279559183`*^9}, {
   3.740105062846696*^9, 3.7401050689382763`*^9}, {3.740105306341527*^9, 
   3.74010531500415*^9}, {3.7401054229098263`*^9, 3.7401054283827953`*^9}, {
   3.740105550216658*^9, 3.74010555132603*^9}, {3.7401056507864428`*^9, 
   3.74010565569134*^9}, {3.740105816207756*^9, 3.740105817439128*^9}, {
   3.740105891294455*^9, 3.740105933331489*^9}, {3.740105987509119*^9, 
   3.740106096246006*^9}, {3.740106191749751*^9, 3.740106193065377*^9}, {
   3.740106366918981*^9, 3.740106471794128*^9}, {3.7401065291475897`*^9, 
   3.740106568784829*^9}, {3.740106815078641*^9, 3.740106850818036*^9}, {
   3.740106882349402*^9, 3.740106883517098*^9}, {3.7401069605409203`*^9, 
   3.7401069619575367`*^9}, {3.7401070389277363`*^9, 3.740107040531528*^9}, 
   3.740107290072938*^9, 3.740107359542013*^9, {3.740107604374696*^9, 
   3.740107607245388*^9}, {3.74010764094419*^9, 3.7401076421220913`*^9}, {
   3.740107864580943*^9, 3.740107894580243*^9}, {3.740108169635096*^9, 
   3.7401082005446568`*^9}, 3.7401082721519413`*^9, 3.740108343876218*^9, {
   3.740108379801166*^9, 3.740108432486961*^9}, 3.7401084732695932`*^9, {
   3.7401086298643208`*^9, 3.740108636861264*^9}, {3.740108690884466*^9, 
   3.7401086935498877`*^9}, {3.740108725260191*^9, 3.7401087262883244`*^9}, {
   3.740108818975113*^9, 3.74010883497367*^9}, {3.740109030071796*^9, 
   3.740109041316206*^9}, 3.740109280360448*^9, {3.74010948124818*^9, 
   3.740109485126053*^9}, {3.7401114030722103`*^9, 3.740111477097744*^9}, 
   3.7401115906164103`*^9, {3.740137521978697*^9, 3.740137568751471*^9}, {
   3.740152414479254*^9, 3.740152433760993*^9}, {3.7401543115515823`*^9, 
   3.7401543269410563`*^9}, {3.740154390035049*^9, 3.740154420126648*^9}, 
   3.740154633723386*^9, 3.740156860189528*^9, 3.740232021337533*^9, {
   3.740232059015933*^9, 3.740232067902264*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"985496dd-cd60-4218-9367-50135f3d9f83"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"preprocess", "[", 
   RowBox[{"game", "[", 
    RowBox[{
    "\"\<CartPole-v0\>\"", ",", "1", ",", "10000", ",", "trained2", ",", 
     "True", ",", "0"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.74006810030131*^9, 3.740068105911882*^9}, {
   3.740071675629094*^9, 3.7400717278403254`*^9}, {3.7400718933649683`*^9, 
   3.740071894150792*^9}, {3.7400725112955112`*^9, 3.740072512108553*^9}, {
   3.740073997348579*^9, 3.740073998558186*^9}, {3.740074342415183*^9, 
   3.740074346651793*^9}, {3.740075227645349*^9, 3.7400752284715033`*^9}, {
   3.740077814834889*^9, 3.740077815095002*^9}, {3.7400779846144*^9, 
   3.7400780019455338`*^9}, {3.740081604712572*^9, 3.740081605744293*^9}, {
   3.7401035670421352`*^9, 3.740103567273312*^9}, {3.740104028862576*^9, 
   3.740104029768773*^9}, {3.740105684943171*^9, 3.740105685845848*^9}, {
   3.740105821261421*^9, 3.740105822069579*^9}, {3.740108716374002*^9, 
   3.740108717113346*^9}, 3.740154683093375*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"6f853051-4faf-4821-aabd-bcdffe0ce06b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generator", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<AbsoluteBatch\>\"", "\[Rule]", "0"}], ",", 
    RowBox[{"\"\<BatchSize\>\"", "\[Rule]", "32"}], ",", 
    RowBox[{"\"\<Net\>\"", "\[Rule]", "policyNet"}]}], "|>"}], "]"}]], "Input",\

 CellChangeTimes->{{3.739996713172902*^9, 3.739996764038086*^9}, 
   3.74006770655408*^9, {3.740107911813751*^9, 3.740107913673492*^9}, {
   3.740108041574749*^9, 3.7401080416946173`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"a279a6fc-86fa-46c3-bfcb-37ecdb31b6ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.03388493118817146`", ",", "0.03687522162663415`", ",", 
          RowBox[{"-", "0.04959940223345764`"}], ",", 
          "0.027639818517575493`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.03462243562070414`", ",", "0.2326720818691945`", ",", 
          RowBox[{"-", "0.049046605863106135`"}], ",", 
          RowBox[{"-", "0.2802705319418829`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.03927587725808803`", ",", "0.038282834470742544`", ",", 
          RowBox[{"-", "0.05465201650194379`"}], ",", 
          RowBox[{"-", "0.003451224737872738`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.04004153394750288`", ",", "0.23414425236735137`", ",", 
          RowBox[{"-", "0.05472104099670125`"}], ",", 
          RowBox[{"-", "0.31286440074812144`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.044724418994849906`", ",", "0.03984282152844182`", ",", 
          RowBox[{"-", "0.060978329011663675`"}], ",", 
          RowBox[{"-", "0.0379284649476489`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.04552127542541874`", ",", "0.23578379488513634`", ",", 
          RowBox[{"-", "0.061736898310616656`"}], ",", 
          RowBox[{"-", "0.3492101810467764`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.05023695132312147`", ",", "0.4317269786835758`", ",", 
          RowBox[{"-", "0.06872110193155219`"}], ",", 
          RowBox[{"-", "0.660704134951857`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.058871490896792986`", ",", "0.23762521190374622`", ",", 
          RowBox[{"-", "0.08193518463058932`"}], ",", 
          RowBox[{"-", "0.3904268167212412`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06362399513486791`", ",", "0.04375592772677481`", ",", 
          RowBox[{"-", "0.08974372096501415`"}], ",", 
          RowBox[{"-", "0.12466048261837698`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.0644991136894034`", ",", "0.24004131379049648`", ",", 
          RowBox[{"-", "0.0922369306173817`"}], ",", 
          RowBox[{"-", "0.44425295639860396`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06929993996521333`", ",", "0.04633719182325147`", ",", 
          RowBox[{"-", "0.10112198974535377`"}], ",", 
          RowBox[{"-", "0.18201109547139993`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.07022668380167836`", ",", 
          RowBox[{"-", "0.14720333326384527`"}], ",", 
          RowBox[{"-", "0.10476221165478178`"}], ",", 
          "0.07713742433825777`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06728261713640145`", ",", "0.049252296575361204`", ",", 
          RowBox[{"-", "0.10321946316801663`"}], ",", 
          RowBox[{"-", "0.2466741876477052`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06826766306790867`", ",", 
          RowBox[{"-", "0.14425562533579447`"}], ",", 
          RowBox[{"-", "0.10815294692097073`"}], ",", 
          "0.011750140896123695`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06538255056119278`", ",", "0.05223779525207953`", ",", 
          RowBox[{"-", "0.10791794410304825`"}], ",", 
          RowBox[{"-", "0.3130028872581635`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06642730646623438`", ",", "0.2487183788217681`", ",", 
          RowBox[{"-", "0.11417800184821152`"}], ",", 
          RowBox[{"-", "0.6376755523871871`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.07140167404266974`", ",", "0.05535816131358881`", ",", 
          RowBox[{"-", "0.12693151289595525`"}], ",", 
          RowBox[{"-", "0.3830191891495492`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.07250883726894151`", ",", "0.2520322715940274`", ",", 
          RowBox[{"-", "0.13459189667894622`"}], ",", 
          RowBox[{"-", "0.7128747284404559`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.07754948270082207`", ",", "0.059005123403444326`", ",", 
          RowBox[{"-", "0.14884939124775534`"}], ",", 
          RowBox[{"-", "0.4654032190979227`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.07872958516889096`", ",", "0.2558822391340902`", ",", 
          RowBox[{"-", "0.15815745562971378`"}], ",", 
          RowBox[{"-", "0.8010537021851469`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.08384722995157276`", ",", "0.0632419167482384`", ",", 
          RowBox[{"-", "0.17417852967341674`"}], ",", 
          RowBox[{"-", "0.5620043732440283`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.08511206828653753`", ",", 
          RowBox[{"-", "0.12906308614116505`"}], ",", 
          RowBox[{"-", "0.1854186171382973`"}], ",", 
          RowBox[{"-", "0.3288614043470841`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.08253080656371423`", ",", "0.06814761005145115`", ",", 
          RowBox[{"-", "0.191995845225239`"}], ",", 
          RowBox[{"-", "0.673808163006163`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.08389375876474325`", ",", 
          RowBox[{"-", "0.12386096908160493`"}], ",", 
          RowBox[{"-", "0.20547200848536226`"}], ",", 
          RowBox[{"-", "0.4471880541257054`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.08141653938311115`", ",", 
          RowBox[{"-", "0.3155742503506929`"}], ",", 
          RowBox[{"-", "0.21441576956787636`"}], ",", 
          RowBox[{"-", "0.22565182902678305`"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Output\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.0032250392250716686`"}], ",", 
          "1.121856302022934`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.0304926566779613`", ",", 
          RowBox[{"-", "0.1618802845478058`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.002818313892930746`", ",", "1.1277367047965527`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"1.012669509695843`", ",", 
          RowBox[{"-", "0.1792796105146408`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.00951271504163742`", ",", "1.1342694774270057`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.14133629202842712`", ",", "1.2543563798069954`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.1395964190363883`", ",", 
          RowBox[{"-", "0.39898380637168884`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.023136381059885`", ",", 
          RowBox[{"-", "0.2139456868171692`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.024354085326194763`", ",", "1.1494726367294787`"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"1.0340085301548243`", ",", 
          RowBox[{"-", "0.24399913847446442`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1134331658482552`", ",", 
          RowBox[{"-", "0.060684897005558014`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.08523396402597427`"}], ",", "1.0483012998476624`"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.071243604272604`", ",", 
          RowBox[{"-", "0.1049201637506485`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.0701276883482933`"}], ",", "1.0626424763351678`"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.06593944877386093`", ",", "1.1879231750965118`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.0753641486167909`", ",", 
          RowBox[{"-", "0.36388957500457764`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.0793306827545166`", ",", "1.2007486186921597`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.0903757050633431`", ",", 
          RowBox[{"-", "0.40391063690185547`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.09513232111930847`", ",", "1.2156638853251933`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"1.1079352043569088`", ",", 
          RowBox[{"-", "0.45072847604751587`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9992713889107108`", ",", 
          RowBox[{"-", "0.2885536551475525`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.0007669590413570404`"}], ",", 
          "1.130121073871851`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.023533739335835`", ",", 
          RowBox[{"-", "0.3577001094818115`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.9537654310464859`", ",", 
          RowBox[{"-", "0.20164775848388672`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.9975666055455804`"}], ",", 
          RowBox[{"-", "0.04866796359419823`"}]}], "}"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", 
     RowBox[{"-", "0.9513320401310921`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.740106488401206*^9, 3.740107130156413*^9, {3.740107900172827*^9, 
   3.740107914849896*^9}, {3.7401079569140167`*^9, 3.740107978001135*^9}, 
   3.740108042610487*^9, 3.7401080731084948`*^9, 3.740108148274107*^9, 
   3.740108247560647*^9, {3.7401084588823833`*^9, 3.740108464181692*^9}, {
   3.7401085266049633`*^9, 3.740108554340076*^9}},
 CellLabel->
  "Out[591]=",ExpressionUUID->"bf899064-8069-4a82-8636-a42919a05196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<3knet-q.wlnet\>\"", ",", "policyNet"}], "]"}]], "Input",
 CellChangeTimes->{{3.7400015670846367`*^9, 3.7400015860078497`*^9}, {
  3.74007131810707*^9, 3.740071326444996*^9}, {3.7400732881238832`*^9, 
  3.740073301093327*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"b20c98e2-0124-4b7c-b033-39664f80a0f2"],

Cell[BoxData["\<\"3knet-q.wlnet\"\>"], "Output",
 CellChangeTimes->{3.7400015876044607`*^9, 3.74007132836788*^9, 
  3.740073303078002*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"28612f15-5774-417f-b582-aebe4d889ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<3knet-q.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.740065808658267*^9, 3.740065822152238*^9}, {
  3.740066062649537*^9, 3.7400660634816647`*^9}, {3.740077744641231*^9, 
  3.7400777469221563`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"0d1abb1f-4641-493c-81f8-d6fa8e0b0caa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 64}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {160., {48.4169921875, 53.5830078125}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.740065823256268*^9, 3.740066064103198*^9, 
  3.74007774894722*^9, 3.740103494125596*^9, 3.740103545912941*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"673284c0-e289-4fe7-af61-260f18949cc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{"preprocess", "[", 
    RowBox[{"game", "[", 
     RowBox[{"10", ",", "300", ",", "net"}], "]"}], "]"}], "[", 
   "\"\<action\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7400658294018307`*^9, 3.740065839070408*^9}, {
  3.740065933128726*^9, 3.740065948179244*^9}, {3.740065981691025*^9, 
  3.7400660012541437`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"15fbc075-e663-423c-adee-ad35edf0a541"],

Cell[BoxData["2000"], "Output",
 CellChangeTimes->{3.7400658730565863`*^9, 3.74006590826369*^9, 
  3.740066036209447*^9, 3.74006610714333*^9, 3.740066315482774*^9, 
  3.7400667168131*^9, 3.7400668056461773`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"edb4cfc5-eac5-4988-ab87-d82a9ee90344"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
    ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.740070442526252*^9, 3.7400704525420313`*^9}, {
  3.740083678140306*^9, 3.7400836792855043`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"b850b103-ce1d-4ad4-93a0-56382a04f9d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.740070455973146*^9, 3.740083208984788*^9, 3.740083298947217*^9, 
   3.7400835366235723`*^9, {3.740083676574678*^9, 3.740083680541648*^9}, 
   3.740104576956167*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"efcadb89-d7a0-46a1-852b-a458df4a7629"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740070476143628*^9, 3.740070519947185*^9}, {
  3.740104579804805*^9, 3.740104589074725*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"7ba625de-14bb-4ebe-8be1-cb1b87e54f6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7400704580189238`*^9, 3.74007047730503*^9}, {
   3.740070520986944*^9, 3.740070547411914*^9}, 3.740070585215725*^9, {
   3.740070840327292*^9, 3.740070862383424*^9}, {3.7400709062805023`*^9, 
   3.7400709324615088`*^9}, 3.7400832109555902`*^9, 3.740083259930869*^9, {
   3.740083309273031*^9, 3.740083335472682*^9}, {3.740083443755866*^9, 
   3.740083444882451*^9}, {3.740083515102013*^9, 3.7400835393375473`*^9}, 
   3.740083569610574*^9, {3.7400836716811028`*^9, 3.740083682640422*^9}, {
   3.740104583497121*^9, 3.740104589700818*^9}},
 CellLabel->
  "Out[233]=",ExpressionUUID->"b4f974cd-ab88-4a62-85f7-363dad046f29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7400782654672203`*^9, 3.740078285776322*^9}, 
   3.7400784878876743`*^9},ExpressionUUID->"f68f0778-012a-472c-b008-\
b9a75aec3816"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "System", "Version", "Executable", "Registered"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["Python"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["3.6.2"]], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "System"} -> 
           1, {All, "Version"} -> 1, {All, "Executable"} -> 
           1, {All, "Registered"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[345.6], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "System" -> TypeSystem`PackageScope`AtomShape[54.], "Version" -> 
               TypeSystem`PackageScope`AtomShape[45.], "Executable" -> 
               TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
               "Registered" -> TypeSystem`PackageScope`UnknownShape]]]], 
           4, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[934785434], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "System", "Version", "Executable", "Registered"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["Python"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["3.6.2"]], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 4], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[934785434]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1683330118][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"System\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"System\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1683330118][{All, "System"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[All, "System"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Version\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Version\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1683330118][{All, "Version"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[All, "Version"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Executable\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1683330118][{All, "Executable"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[All, "Executable"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Registered\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1683330118][{All, "Registered"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[All, "Registered"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["176b0b98-d7cf-4da1-8721-7f317accad35", 
                    Style[
                    "176b0b98-d7cf-4da1-8721-7f317accad35", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1683330118][{
                    Key["176b0b98-d7cf-4da1-8721-7f317accad35"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1683330118][
                   GeneralUtilities`Slice[
                    Key["176b0b98-d7cf-4da1-8721-7f317accad35"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Python", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["176b0b98-d7cf-4da1-8721-7f317accad35"], 
                   Key["System"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["176b0b98-d7cf-4da1-8721-7f317accad35"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{45., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/Library/Frameworks/Python.framework/Versions/3.6/bin/\
python3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["176b0b98-d7cf-4da1-8721-7f317accad35"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["176b0b98-d7cf-4da1-8721-7f317accad35"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["2e9bbb85-f707-4598-95e6-ce203e0034db", 
                    Style[
                    "2e9bbb85-f707-4598-95e6-ce203e0034db", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1683330118][{
                    Key["2e9bbb85-f707-4598-95e6-ce203e0034db"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1683330118][
                   GeneralUtilities`Slice[
                    Key["2e9bbb85-f707-4598-95e6-ce203e0034db"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Python", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["2e9bbb85-f707-4598-95e6-ce203e0034db"], 
                   Key["System"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["2e9bbb85-f707-4598-95e6-ce203e0034db"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{45., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "/Library/Frameworks/Python.framework/Versions/3.6/bin/\
python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["2e9bbb85-f707-4598-95e6-ce203e0034db"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["2e9bbb85-f707-4598-95e6-ce203e0034db"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["4c46e6de-431f-4924-aacf-8fce662d06d9", 
                    Style[
                    "4c46e6de-431f-4924-aacf-8fce662d06d9", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1683330118][{
                    Key["4c46e6de-431f-4924-aacf-8fce662d06d9"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1683330118][
                   GeneralUtilities`Slice[
                    Key["4c46e6de-431f-4924-aacf-8fce662d06d9"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Python", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["4c46e6de-431f-4924-aacf-8fce662d06d9"], 
                   Key["System"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["4c46e6de-431f-4924-aacf-8fce662d06d9"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{45., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["4c46e6de-431f-4924-aacf-8fce662d06d9"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["4c46e6de-431f-4924-aacf-8fce662d06d9"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["1c26ca9e-ebe7-435d-844a-d21c6546524a", 
                    Style[
                    "1c26ca9e-ebe7-435d-844a-d21c6546524a", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1683330118][{
                    Key["1c26ca9e-ebe7-435d-844a-d21c6546524a"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1683330118][
                   GeneralUtilities`Slice[
                    Key["1c26ca9e-ebe7-435d-844a-d21c6546524a"]]], "Mouse"], 
                 ImageSize -> {{345.6, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Python", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["1c26ca9e-ebe7-435d-844a-d21c6546524a"], 
                   Key["System"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["3.6.2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["1c26ca9e-ebe7-435d-844a-d21c6546524a"], 
                   Key["Version"]]], "Mouse"], 
                ImageSize -> {{45., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["/usr/local/bin/python3.6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["1c26ca9e-ebe7-435d-844a-d21c6546524a"], 
                   Key["Executable"]]], "Mouse"], 
                ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
                  GeneralUtilities`Slice[
                   Key["1c26ca9e-ebe7-435d-844a-d21c6546524a"], 
                   Key["Registered"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1683330118][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1683330118]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1683330118][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1043., {67.134033203125, 72.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7400782892880487`*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"6b97a9ee-d01f-4fc5-b3cd-e969544f8be8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7400940697576637`*^9, 3.740094084840146*^9}, {
  3.740104922771841*^9, 3.740104928371257*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"befeb948-84ad-46c2-ba5a-b69792de4e08"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.740094087263363*^9},
 CellLabel->
  "Out[443]=",ExpressionUUID->"3cecd003-b5cc-4d35-a129-c7d71b8ace5f"],

Cell[BoxData[
 RowBox[{"{", "12", "}"}]], "Output",
 CellChangeTimes->{3.740094087282415*^9},
 CellLabel->
  "Out[444]=",ExpressionUUID->"92cc1034-6c41-41df-ab83-95854fa38238"]
}, Open  ]]
},
WindowSize->{808, 709},
WindowMargins->{{Automatic, 17}, {48, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1286, 25, 136, "Input",ExpressionUUID->"c079123b-ca29-4765-b33b-6d5df0b9bdca"],
Cell[1869, 49, 2327, 33, 34, "Output",ExpressionUUID->"4419dea7-d706-41e3-bbe1-79f623ce700d"],
Cell[4199, 84, 2339, 34, 34, "Output",ExpressionUUID->"a4e052ff-0a83-4694-9470-e3d3016872e5"],
Cell[6541, 120, 2282, 32, 34, "Output",ExpressionUUID->"a54127b0-2540-46ef-9313-710480c8960f"],
Cell[8826, 154, 2710, 43, 42, "Message",ExpressionUUID->"f081b4d7-3dcd-43a4-bf76-75158488f155"],
Cell[11539, 199, 2423, 38, 24, "Message",ExpressionUUID->"b201c9f5-5abb-456b-9ac1-e74f15916783"],
Cell[13965, 239, 2300, 33, 34, "Output",ExpressionUUID->"a2e533df-4e8b-44e1-a4e9-247d2d2f1ffe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16302, 277, 2404, 43, 115, "Input",ExpressionUUID->"1faf3484-2a13-4f68-b491-90ee0d1c56be"],
Cell[18709, 322, 1765, 24, 34, "Output",ExpressionUUID->"f5a72cac-b3b3-4a3f-b8d1-9ff6e3460516"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20511, 351, 3346, 48, 52, "Input",ExpressionUUID->"d1ff44ce-5974-408d-a225-6914ca1c3f62"],
Cell[23860, 401, 32396, 629, 77, "Output",ExpressionUUID->"26211965-9b29-40fd-840c-ff39729dea5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56293, 1035, 3384, 50, 52, "Input",ExpressionUUID->"0494647d-4411-4585-b621-eee85eb9dca4"],
Cell[59680, 1087, 2741, 37, 34, "Output",ExpressionUUID->"985496dd-cd60-4218-9367-50135f3d9f83"]
}, Open  ]],
Cell[62436, 1127, 1081, 18, 30, "Input",ExpressionUUID->"6f853051-4faf-4821-aabd-bcdffe0ce06b"],
Cell[CellGroupData[{
Cell[63542, 1149, 543, 12, 30, "Input",ExpressionUUID->"a279a6fc-86fa-46c3-bfcb-37ecdb31b6ed"],
Cell[64088, 1163, 9841, 211, 581, "Output",ExpressionUUID->"bf899064-8069-4a82-8636-a42919a05196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73966, 1379, 358, 6, 30, "Input",ExpressionUUID->"b20c98e2-0124-4b7c-b033-39664f80a0f2"],
Cell[74327, 1387, 217, 3, 34, "Output",ExpressionUUID->"28612f15-5774-417f-b582-aebe4d889ec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74581, 1395, 361, 6, 30, "Input",ExpressionUUID->"0d1abb1f-4641-493c-81f8-d6fa8e0b0caa"],
Cell[74945, 1403, 28056, 572, 77, "Output",ExpressionUUID->"673284c0-e289-4fe7-af61-260f18949cc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103038, 1980, 463, 10, 30, "Input",ExpressionUUID->"15fbc075-e663-423c-adee-ad35edf0a541"],
Cell[103504, 1992, 290, 4, 34, "Output",ExpressionUUID->"edb4cfc5-eac5-4988-ab87-d82a9ee90344"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103831, 2001, 436, 10, 30, "Input",ExpressionUUID->"b850b103-ce1d-4ad4-93a0-56382a04f9d4"],
Cell[104270, 2013, 475, 11, 34, "Output",ExpressionUUID->"efcadb89-d7a0-46a1-852b-a458df4a7629"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104782, 2029, 295, 7, 30, "Input",ExpressionUUID->"7ba625de-14bb-4ebe-8be1-cb1b87e54f6b"],
Cell[105080, 2038, 824, 14, 34, "Output",ExpressionUUID->"b4f974cd-ab88-4a62-85f7-363dad046f29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105941, 2057, 179, 3, 30, "Input",ExpressionUUID->"f68f0778-012a-472c-b008-b9a75aec3816"],
Cell[106123, 2062, 29394, 566, 159, "Output",ExpressionUUID->"6b97a9ee-d01f-4fc5-b3cd-e969544f8be8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135554, 2633, 252, 5, 30, "Input",ExpressionUUID->"befeb948-84ad-46c2-ba5a-b69792de4e08"],
Cell[135809, 2640, 170, 4, 34, "Output",ExpressionUUID->"3cecd003-b5cc-4d35-a129-c7d71b8ace5f"],
Cell[135982, 2646, 176, 4, 34, "Output",ExpressionUUID->"92cc1034-6c41-41df-ab83-95854fa38238"]
}, Open  ]]
}
]
*)

