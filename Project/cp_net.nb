(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    211340,       4407]
NotebookOptionsPosition[    206293,       4314]
NotebookOutlinePosition[    206648,       4330]
CellTagsIndexPosition[    206605,       4327]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PacletDirectoryAdd", "[", 
  RowBox[{"{", "\"\</Users/ianfan/Downloads/neuralnetworks\>\"", "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "NeuralNetworks`"}], "\[IndentingNewLine]", 
 RowBox[{"Lookup", "[", 
  RowBox[{
   RowBox[{"PacletInformation", "@", "\"\<NeuralNetworks\>\""}], ",", 
   "\"\<Version\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.739525856935153*^9, 3.739525859456152*^9}, {
  3.739647503397869*^9, 3.739647503809507*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"f020b06a-07e2-4fe4-be8a-bf49add46fa3"],

Cell[BoxData["\<\"/Users/ianfan/Documents/gym-http-api/binding-wl\"\>"], \
"Output",
 CellChangeTimes->{3.739648958313302*^9, 3.739657347230729*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c9ae8e94-69ff-4827-8b11-da3a7fb47dc9"],

Cell[BoxData[
 RowBox[{"{", "\<\"/Users/ianfan/Downloads/neuralnetworks\"\>", 
  "}"}]], "Output",
 CellChangeTimes->{3.739648958313302*^9, 3.739657347243225*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"8556996b-9b4e-4612-be79-7ea78eb1add5"],

Cell[BoxData["\<\"11.3.7\"\>"], "Output",
 CellChangeTimes->{3.739648958313302*^9, 3.739657347386709*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"bfae3211-59e1-458a-bf9f-9238a2a5aef3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\</Users/ianfan/Documents/gym-http-api/binding-wl/gym_http_client.wl\>\"\
", "]"}], ";"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"473bd352-9927-4ae9-9733-4a10e6fa1520"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<RLproject.wl\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"randomgame", "[", 
  RowBox[{"1", ",", "200"}], "]"}]}], "Input",
 CellChangeTimes->{{3.739655805420171*^9, 3.739655786153015*^9}, {
  3.739656368190345*^9, 3.739656368417687*^9}, {3.739656770394664*^9, 
  3.7396567750970716`*^9}, {3.73965738611791*^9, 3.739657394700296*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"9695405f-7c86-4748-948f-eb2e70bf8506"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"observation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.02769675707157944`", ",", "0.026490378417375407`", ",", 
         RowBox[{"-", "0.001453359993114002`"}], ",", 
         "0.019938199012473762`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.028226564639926947`", ",", "0.22163314219272118`", ",", 
         RowBox[{"-", "0.0010545960128645268`"}], ",", 
         RowBox[{"-", "0.27320292519465306`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.03265922748378137`", ",", "0.026526254494642854`", ",", 
         RowBox[{"-", "0.006518654516757588`"}], ",", 
         "0.019147192437746208`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.03318975257367422`", ",", 
         RowBox[{"-", "0.16850160828090835`"}], ",", 
         RowBox[{"-", "0.0061357106680026635`"}], ",", 
         "0.3097663002996728`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.029819720408056055`", ",", 
         RowBox[{"-", "0.36353560378396144`"}], ",", 
         "0.00005961533799079232`", ",", "0.6005078991280269`"}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"0.022549008332376826`", ",", 
         RowBox[{"-", "0.5586583889503861`"}], ",", "0.012069773320551331`", 
         ",", "0.8932096032669248`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.011375840553369104`", ",", 
         RowBox[{"-", "0.3637022027089859`"}], ",", "0.029933965385889827`", 
         ",", "0.6043450516748122`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.004101796499189386`", ",", 
         RowBox[{"-", "0.16901138824737744`"}], ",", "0.04202086641938607`", 
         ",", "0.3212389302139671`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.0007215687342418367`", ",", "0.025487745940805023`", ",", 
         "0.04844564502366541`", ",", "0.04209826845864556`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0012313236530579373`", ",", 
         RowBox[{"-", "0.17029422101312858`"}], ",", "0.04928761039283833`", 
         ",", "0.3496641128813237`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.0021745607672046348`"}], ",", 
         "0.024093370054006746`", ",", "0.0562808926504648`", ",", 
         "0.07292151059290253`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.0016926933661244997`"}], ",", 
         RowBox[{"-", "0.17178838450953696`"}], ",", "0.05773932286232285`", 
         ",", "0.3828167664530666`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.005128461056315239`"}], ",", 
         RowBox[{"-", "0.3676805796515034`"}], ",", "0.06539565819138418`", 
         ",", "0.6931313221915063`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.012482072649345307`"}], ",", 
         RowBox[{"-", "0.1735238654947343`"}], ",", "0.07925828463521431`", 
         ",", "0.4217313984367781`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.015952549959239993`"}], ",", 
         RowBox[{"-", "0.3696740320251262`"}], ",", "0.08769291260394987`", 
         ",", "0.7383105353900086`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.023346030599742516`"}], ",", 
         RowBox[{"-", "0.5658904887092029`"}], ",", "0.10245912331175004`", 
         ",", "1.0572529453780501`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.03466384037392657`"}], ",", 
         RowBox[{"-", "0.3722643622663021`"}], ",", "0.12360418221931105`", 
         ",", "0.7984072246031191`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.04210912761925262`"}], ",", 
         RowBox[{"-", "0.17903531447251295`"}], ",", "0.13957232671137343`", 
         ",", "0.5470221170266583`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.045689833908702876`"}], ",", 
         RowBox[{"-", "0.3758137578107869`"}], ",", "0.15051276905190658`", 
         ",", "0.8802206152335641`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.053206109064918614`"}], ",", 
         RowBox[{"-", "0.5726247062714056`"}], ",", "0.16811718135657786`", 
         ",", "1.2161832821854521`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.06465860319034672`"}], ",", 
         RowBox[{"-", "0.3800217463033088`"}], ",", "0.1924408470002869`", 
         ",", "0.9805458979409094`"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"action\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
       "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0"}], 
      "}"}], "}"}]}], ",", 
   RowBox[{"\<\"reward\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
       "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",",
        "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
       ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.739657378897408*^9, 3.739657396183323*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"8f79a30d-9211-40c7-8718-3342a396ae0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GymEnvironment`*"}]], "Input",
 CellChangeTimes->{{3.7396557908189707`*^9, 3.7396557974004383`*^9}, {
  3.739656403097826*^9, 3.739656410757112*^9}, {3.739656469719543*^9, 
  3.739656474602511*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"32ad068d-f2d8-4a51-bc4d-475afb445c37"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["GymEnvironment`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["GymEnvironment`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["EnvActionSpaceContains",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "EnvActionSpaceContains", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["EnvListAll",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {"EnvListAll", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["EnvStep",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {"EnvStep", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"]},
        {
         ButtonBox["EnvActionSpaceInfo",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "EnvActionSpaceInfo", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["EnvMonitorClose",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "EnvMonitorClose", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["GymEnvironmentObject",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "GymEnvironmentObject", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"]},
        {
         ButtonBox["EnvActionSpaceSample",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "EnvActionSpaceSample", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["EnvMonitorStart",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "EnvMonitorStart", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["GymUpload",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {"GymUpload", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"]},
        {
         ButtonBox["EnvClose",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {"EnvClose", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["EnvObservationSpaceInfo",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "EnvObservationSpaceInfo", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["ShutdownGymServer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {
            "ShutdownGymServer", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"]},
        {
         ButtonBox["EnvCreate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {"EnvCreate", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], 
         ButtonBox["EnvReset",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1103739642075-7704543", {"EnvReset", "GymEnvironment`"}},
          ButtonNote->"GymEnvironment`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{
  3.739656475216312*^9},ExpressionUUID->"6307ce76-2b8a-4175-bf09-\
167b79a441c1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7396558184281063`*^9, 3.739655827645199*^9}, 
   3.7396563665801287`*^9},ExpressionUUID->"916125f5-d5af-4d03-95de-\
fb43eface4a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomgame", "[", 
   RowBox[{"ep_", ",", "st_Integer"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "env", ",", "states", ",", "\[IndentingNewLine]", "state", ",", "ob", 
      ",", "ac", ",", "re", ",", "action"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Get", "[", "\"\<gym_http_client.wl\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"env", " ", "=", " ", 
      RowBox[{"EnvCreate", "[", "\"\<CartPole-v0\>\"", "]"}]}], ";", 
     RowBox[{"states", " ", "=", " ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<observation\>\"", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<action\>\"", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<reward\>\"", "\[Rule]", 
         RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"state", "[", "\"\<observation\>\"", "]"}], " ", "=", " ", 
         RowBox[{"EnvReset", "[", "env", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"reset", " ", "every", " ", "episode"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"ob", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ac", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"re", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"action", " ", "=", 
            RowBox[{"EnvActionSpaceSample", "[", "env", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ob", ",", 
             RowBox[{"state", "[", "\"\<observation\>\"", "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ac", ",", "action"}], "]"}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"state", " ", "=", " ", 
            RowBox[{"EnvStep", "[", 
             RowBox[{"env", ",", " ", "action", ",", " ", "True"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"re", ",", 
             RowBox[{"state", "[", "\"\<reward\>\"", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"state", "[", "\"\<done\>\"", "]"}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"step", ",", " ", "st"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"states", "[", "\"\<observation\>\"", "]"}], ",", "ob"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"states", "[", "\"\<action\>\"", "]"}], ",", "ac"}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"states", "[", "\"\<reward\>\"", "]"}], ",", "re"}], "]"}], 
        ";"}], "\n", "  \t", ",", "\n", "  \t", 
       RowBox[{"{", 
        RowBox[{"episode", ",", "ep"}], "}"}]}], "\n", " ", "]"}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "close", " ", "the", " ", "environment", " ", "when", " ", "done"}], 
      " ", "*)"}], "\n", 
     RowBox[{"EnvClose", "[", "env", "]"}], ";", "\[IndentingNewLine]", 
     "states"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.739617231899293*^9, 3.739617246860484*^9}, {
   3.739647521228148*^9, 3.739647542569275*^9}, {3.739647594963233*^9, 
   3.739647830400176*^9}, {3.73964788247491*^9, 3.739647911618926*^9}, {
   3.739647943561634*^9, 3.7396479857171392`*^9}, {3.739648021624539*^9, 
   3.739648053241948*^9}, {3.7396481042390633`*^9, 3.739648058607377*^9}, 
   3.739648092083953*^9, {3.739648122906022*^9, 3.739648139655414*^9}, {
   3.73964820199552*^9, 3.739648247444385*^9}, {3.739648283940009*^9, 
   3.739648294666432*^9}, {3.7396483944231863`*^9, 3.73964841103082*^9}, {
   3.7396484749097652`*^9, 3.739648502804029*^9}, {3.739648616752038*^9, 
   3.739648619780107*^9}, 3.739648734676848*^9, {3.739648767983391*^9, 
   3.739648808599751*^9}, {3.739648889455785*^9, 3.739648889829994*^9}, 
   3.739649049455563*^9, {3.7396490848356733`*^9, 3.7396491904004803`*^9}, 
   3.739649503054599*^9, {3.739649540731949*^9, 3.7396495717023973`*^9}, {
   3.73964960836834*^9, 3.739649719151353*^9}, {3.739649753790292*^9, 
   3.739649787464303*^9}, {3.7396498300265293`*^9, 3.739649844950799*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"d28a1cef-b0b0-41e4-89dc-427bb2361533"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomgame", "[", 
  RowBox[{"1", ",", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.739647852308777*^9, 3.739647869499598*^9}, {
  3.7396481615139017`*^9, 3.739648166550556*^9}, {3.739649555126397*^9, 
  3.7396495590029097`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"9249d780-709f-4ade-8cd7-45e0dfd35511"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.73964983752101*^9, 3.7396554891567907`*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"13bc3135-8f57-480c-86ce-6d8a832a83e1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"observation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.02970798824016957`"}], ",", 
         RowBox[{"-", "0.038367374430027336`"}], ",", 
         RowBox[{"-", "0.04368655212002525`"}], ",", 
         RowBox[{"-", "0.04417588365036937`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.030475335728770116`"}], ",", "0.1573529114227336`", 
         ",", 
         RowBox[{"-", "0.044570069793032636`"}], ",", 
         RowBox[{"-", "0.3503159669487068`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.027328277500315443`"}], ",", "0.35307945136332924`", 
         ",", 
         RowBox[{"-", "0.051576389132006774`"}], ",", 
         RowBox[{"-", "0.6567134809395947`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.02026668847304886`"}], ",", "0.15871197741348833`", 
         ",", 
         RowBox[{"-", "0.06471065875079866`"}], ",", 
         RowBox[{"-", "0.38070670175393495`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.017092448924779093`"}], ",", "0.35469027768548833`", 
         ",", 
         RowBox[{"-", "0.07232479278587736`"}], ",", 
         RowBox[{"-", "0.6930705357969142`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.009998643371069326`"}], ",", "0.16064223428750388`", 
         ",", 
         RowBox[{"-", "0.08618620350181565`"}], ",", 
         RowBox[{"-", "0.4240043759487347`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.006785798685319248`"}], ",", 
         RowBox[{"-", "0.033159816271163906`"}], ",", 
         RowBox[{"-", "0.09466629102079034`"}], ",", 
         RowBox[{"-", "0.15968769798961713`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.007448995010742527`"}], ",", 
         RowBox[{"-", "0.2268079597637468`"}], ",", 
         RowBox[{"-", "0.09786004498058268`"}], ",", "0.10169358760760444`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.011985154206017461`"}], ",", 
         RowBox[{"-", "0.4204011602689783`"}], ",", 
         RowBox[{"-", "0.0958261732284306`"}], ",", "0.3619690717723017`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.020393177411397026`"}], ",", 
         RowBox[{"-", "0.22405707006448825`"}], ",", 
         RowBox[{"-", "0.08858679179298456`"}], ",", 
         "0.040674324412616536`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.024874318812686792`"}], ",", 
         RowBox[{"-", "0.417804374071952`"}], ",", 
         RowBox[{"-", "0.08777330530473224`"}], ",", "0.3041452190350928`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.03323040629412583`"}], ",", 
         RowBox[{"-", "0.6115729435021257`"}], ",", 
         RowBox[{"-", "0.08169040092403038`"}], ",", "0.5679069449662952`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.04546186516416834`"}], ",", 
         RowBox[{"-", "0.8054597525371114`"}], ",", 
         RowBox[{"-", "0.07033226202470447`"}], ",", "0.8337770216618867`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.06157106021491057`"}], ",", 
         RowBox[{"-", "0.6094509469777889`"}], ",", 
         RowBox[{"-", "0.05365672159146673`"}], ",", "0.5198300586764811`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.07376007915446635`"}], ",", 
         RowBox[{"-", "0.8037780992609667`"}], ",", 
         RowBox[{"-", "0.0432601204179371`"}], ",", "0.7951337727657629`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.08983564113968567`"}], ",", 
         RowBox[{"-", "0.9982804685960018`"}], ",", 
         RowBox[{"-", "0.02735744496262184`"}], ",", "1.0738998611932793`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.10980125051160572`"}], ",", 
         RowBox[{"-", "1.1930303842065313`"}], ",", 
         RowBox[{"-", "0.0058794477387562535`"}], ",", "1.357873338372061`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.13366185819573634`"}], ",", 
         RowBox[{"-", "1.3880781003210376`"}], ",", "0.021278019028684966`", 
         ",", "1.6487113080886502`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.16142342020215708`"}], ",", 
         RowBox[{"-", "1.5834422222693105`"}], ",", "0.05425224519045797`", 
         ",", "1.9479464201377825`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.19309226464754328`"}], ",", 
         RowBox[{"-", "1.7790978680333547`"}], ",", "0.09321117359321363`", 
         ",", "2.2569404257365413`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2286742220082104`"}], ",", 
         RowBox[{"-", "1.9749621712586982`"}], ",", "0.13834998210794447`", 
         ",", "2.576825924833006`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.26817346543338433`"}], ",", 
         RowBox[{"-", "2.1708770155484074`"}], ",", "0.1898865006046046`", 
         ",", "2.908435472516758`"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"action\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"reward\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
       "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",",
        "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", 
       ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.739649810930325*^9, 3.739649838745368*^9}, 
   3.7396554902951813`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c5d5a078-4b1e-4cd4-b78c-1373093e5d3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"game", " ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ep", ",", "st", ",", "net"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"$Package", " ", "=", "  ", "\"\<gym_http_client.wl\>\""}], ";",
       "\n", "       ", 
      RowBox[{"Get", "[", "$Package", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"env", " ", "=", " ", 
       RowBox[{"EnvCreate", "[", "\"\<CartPole-v0\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$numEpisodes", " ", "=", " ", "ep"}], ";", "\n", 
      RowBox[{"$maxSteps", " ", "=", " ", "st"}], ";", "\n", 
      RowBox[{"i", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<observation\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<action\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"\"\<reward\>\"", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\n", 
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"state", "[", "\"\<observation\>\"", "]"}], " ", "=", " ", 
          RowBox[{"EnvReset", "[", "env", "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"reset", " ", "every", " ", "episode"}], " ", "*)"}], "\n", 
         "\t", 
         RowBox[{"ob", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ac", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"re", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ";", "\n", "\t", 
         RowBox[{
         "Do", "[", "\t", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"action", " ", "=", 
             RowBox[{"net", "[", 
              RowBox[{"state", "[", "\"\<observation\>\"", "]"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ob", ",", 
              RowBox[{"state", "[", "\"\<observation\>\"", "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ac", ",", "action"}], "]"}], ";", "\n", "  \t\t", 
            RowBox[{"state", " ", "=", " ", 
             RowBox[{"EnvStep", "[", 
              RowBox[{"env", ",", " ", "action", ",", " ", "True"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"re", ",", 
              RowBox[{"state", "[", "\"\<reward\>\"", "]"}]}], "]"}], ";", 
            "\n", "  \t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"state", "[", "\"\<done\>\"", "]"}], ",", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Break", "[", "]"}], ";"}], ")"}]}], "]"}]}], ",", 
           "\n", "  \t\t", 
           RowBox[{"{", 
            RowBox[{"step", ",", " ", "$maxSteps"}], "}"}]}], "\n", "  \t", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"states", "[", "\"\<observation\>\"", "]"}], ",", "ob"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"states", "[", "\"\<action\>\"", "]"}], ",", "ac"}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{
           RowBox[{"states", "[", "\"\<reward\>\"", "]"}], ",", "re"}], "]"}],
          ";"}], "\n", "  \t", ",", "\n", "  \t", 
        RowBox[{"{", 
         RowBox[{"episode", ",", " ", "$numEpisodes"}], "}"}]}], "\n", " ", 
       "]"}], ";", "\n", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "close", " ", "the", " ", "environment", " ", "when", " ", "done"}], 
       " ", "*)"}], "\n", 
      RowBox[{"EnvClose", "[", "env", "]"}], ";", "\[IndentingNewLine]", 
      "states"}], "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739485479395103*^9, 3.7394854868060303`*^9}, {
   3.739485561549652*^9, 3.739485584211891*^9}, {3.739485644221324*^9, 
   3.739485793393968*^9}, {3.739489502758328*^9, 3.739489516980432*^9}, {
   3.7394895522878227`*^9, 3.739489595024527*^9}, {3.73948967730443*^9, 
   3.7394896966279383`*^9}, {3.739489891927956*^9, 3.73948989476919*^9}, {
   3.739490057070147*^9, 3.739490078394309*^9}, {3.7394901470142612`*^9, 
   3.739490151412161*^9}, {3.739490204233727*^9, 3.73949022686579*^9}, 
   3.739490313281994*^9, {3.739490362898209*^9, 3.7394903901673737`*^9}, {
   3.7395263790254297`*^9, 3.739526381522662*^9}, {3.739529362146061*^9, 
   3.7395293650505447`*^9}, {3.739532913723529*^9, 3.739532942709525*^9}, {
   3.739532997471221*^9, 3.739533016854209*^9}, {3.739533048775573*^9, 
   3.739533080279847*^9}, {3.7395332375491858`*^9, 3.7395332949831467`*^9}, {
   3.739533779546729*^9, 3.739533780170417*^9}, {3.739533887145504*^9, 
   3.739533910316598*^9}, {3.739542570736607*^9, 3.7395427003630047`*^9}, {
   3.739542777451318*^9, 3.739542784621685*^9}, {3.7395428204562807`*^9, 
   3.7395428208874807`*^9}, {3.7395428612235403`*^9, 3.739542863038808*^9}, {
   3.73954311740379*^9, 3.7395431313046923`*^9}, {3.739543282051424*^9, 
   3.739543291033267*^9}, {3.739545176542265*^9, 3.739545179784683*^9}, {
   3.739545368015192*^9, 3.739545374849646*^9}, {3.7395534874081917`*^9, 
   3.7395535063280687`*^9}, {3.739560576529929*^9, 3.739560589120645*^9}, {
   3.739560869106941*^9, 3.7395608694282713`*^9}, {3.739561311600788*^9, 
   3.7395613166335287`*^9}, 3.739561645040204*^9, {3.739569176124144*^9, 
   3.739569179371662*^9}, 3.739569562644226*^9, {3.7395701832597017`*^9, 
   3.739570186447208*^9}, {3.739571699003647*^9, 3.739571700805229*^9}, 
   3.739648872333935*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"e93b8485-4c79-449d-a4ee-74cd222b7cac"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ep", ",", "st", ",", "net"}], "}"}], ",", 
   RowBox[{
    RowBox[{"$Package", "=", "\<\"gym_http_client.wl\"\>"}], ";", 
    RowBox[{"Get", "[", "$Package", "]"}], ";", 
    RowBox[{"env", "=", 
     RowBox[{"EnvCreate", "[", "\<\"CartPole-v0\"\>", "]"}]}], ";", 
    RowBox[{"$numEpisodes", "=", "ep"}], ";", 
    RowBox[{"$maxSteps", "=", "st"}], ";", 
    RowBox[{"i", "=", "0"}], ";", 
    RowBox[{"states", "=", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{"\<\"observation\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"action\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"reward\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "]"}]}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"state", "[", "\<\"observation\"\>", "]"}], "=", 
        RowBox[{"EnvReset", "[", "env", "]"}]}], ";", 
       RowBox[{"ob", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"ac", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"re", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"action", "=", 
           RowBox[{"net", "[", 
            RowBox[{"state", "[", "\<\"observation\"\>", "]"}], "]"}]}], ";", 
          
          RowBox[{"AppendTo", "[", 
           RowBox[{"ob", ",", 
            RowBox[{"state", "[", "\<\"observation\"\>", "]"}]}], "]"}], ";", 
          
          RowBox[{"AppendTo", "[", 
           RowBox[{"ac", ",", "action"}], "]"}], ";", 
          RowBox[{"state", "=", 
           RowBox[{"EnvStep", "[", 
            RowBox[{"env", ",", "action", ",", "True"}], "]"}]}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"re", ",", 
            RowBox[{"state", "[", "\<\"reward\"\>", "]"}]}], "]"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"state", "[", "\<\"done\"\>", "]"}], ",", 
            RowBox[{
             RowBox[{"Break", "[", "]"}], ";"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"step", ",", "$maxSteps"}], "}"}]}], "]"}], ";", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"states", "[", "\<\"observation\"\>", "]"}], ",", "ob"}], 
        "]"}], ";", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"states", "[", "\<\"action\"\>", "]"}], ",", "ac"}], "]"}], 
       ";", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"states", "[", "\<\"reward\"\>", "]"}], ",", "re"}], "]"}], 
       ";"}], ",", 
      RowBox[{"{", 
       RowBox[{"episode", ",", "$numEpisodes"}], "}"}]}], "]"}], ";", 
    RowBox[{"EnvClose", "[", "env", "]"}], ";", "states"}]}], "]"}]], "Output",\

 CellChangeTimes->{
  3.739525885270067*^9, 3.739526393067878*^9, {3.739529346959429*^9, 
   3.739529368665209*^9}, {3.739532937331346*^9, 3.739532944537291*^9}, 
   3.739533133007045*^9, 3.739533342224291*^9, 3.7395336445376787`*^9, 
   3.739533763402171*^9, 3.739533841307074*^9, 3.739533910955476*^9, 
   3.739542622628566*^9, 3.73954265663188*^9, 3.739542704071329*^9, 
   3.739542867019808*^9, 3.739542968129553*^9, 3.739543055476037*^9, 
   3.73954313185389*^9, 3.739543291787519*^9, 3.739545181891027*^9, 
   3.7395453756576366`*^9, 3.739553704553728*^9, 3.739560503824771*^9, 
   3.739560589800132*^9, 3.7395606718431883`*^9, 3.739560874580531*^9, 
   3.739560951469679*^9, 3.7395614424013777`*^9, 3.739561646606566*^9, 
   3.7395691800828743`*^9, 3.7395695661782007`*^9, 3.739570187092881*^9, 
   3.7395717213174467`*^9, 3.739631865022868*^9, 3.739632176504095*^9, 
   3.739648872881542*^9, 3.739656089687066*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"29e3657e-ff22-480e-bbce-1494058f66ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calculateReward", " ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Reverse", "[", 
       RowBox[{"ReplaceList", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"h__", ",", "___"}], "}"}], "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{"i", "+", "1"}]}], ";", 
            RowBox[{"0.99", "*", "i", "*", "h"}]}], ")"}]}]}], "]"}], "]"}]}],
      "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739526101913103*^9, 3.739526131520051*^9}, {
  3.739526184634528*^9, 3.73952619612307*^9}, {3.739526291971797*^9, 
  3.739526302490617*^9}, {3.739526457460414*^9, 3.7395264622939987`*^9}, {
  3.739541877732889*^9, 3.739541881791041*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"047836aa-b3f9-4ea0-8fd7-5a96a22ecbf1"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ";", 
    RowBox[{"Reverse", "[", 
     RowBox[{"ReplaceList", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"h__", ",", "___"}], "}"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"i", "+", "1"}]}], ";", 
          RowBox[{"0.99`", " ", "i", " ", "h"}]}], ")"}]}]}], "]"}], 
     "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.739526198953286*^9, 3.7395263033586407`*^9, {3.739526443765748*^9, 
   3.739526459925682*^9}, 3.739529381754505*^9, 3.739533650337884*^9, 
   3.739541883281242*^9, 3.7395429778816338`*^9, 3.739560507712875*^9, 
   3.7395606870624523`*^9, 3.739631868491386*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"cd873a34-d2a8-4c20-bb90-3c549bb01182"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"preprocess", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", "[", "\"\<action\>\"", "]"}], " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"x", "[", "\"\<action\>\"", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", "[", "\"\<observation\>\"", "]"}], " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"x", "[", "\"\<observation\>\"", "]"}], ",", "1"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", "[", "\"\<reward\>\"", "]"}], " ", "=", " ", 
        RowBox[{"Normalize", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"calculateReward", "/@", 
           RowBox[{"x", "[", "\"\<reward\>\"", "]"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7395264229924097`*^9, 3.739526468811391*^9}, {
   3.7395265079403677`*^9, 3.739526559343906*^9}, 3.739528488636742*^9, {
   3.739530489487639*^9, 3.739530516906807*^9}, {3.739530710662456*^9, 
   3.739530713535194*^9}, {3.73953614871585*^9, 3.7395361491458597`*^9}, {
   3.739541867493937*^9, 3.739541868765362*^9}, {3.7395495334795847`*^9, 
   3.739549538865219*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"56fd5944-c546-42d9-a028-7de2902229a9"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"Association", "[", "]"}]}], ";", 
    RowBox[{
     RowBox[{"result", "[", "\<\"action\"\>", "]"}], "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"x", "[", "\<\"action\"\>", "]"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"result", "[", "\<\"observation\"\>", "]"}], "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"x", "[", "\<\"observation\"\>", "]"}], ",", "1"}], "]"}]}], 
    ";", 
    RowBox[{
     RowBox[{"result", "[", "\<\"reward\"\>", "]"}], "=", 
     RowBox[{"Normalize", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"calculateReward", "/@", 
        RowBox[{"x", "[", "\<\"reward\"\>", "]"}]}], "]"}], "]"}]}], ";", 
    "result"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.739526435402898*^9, 3.7395264816867027`*^9}, 
   3.739526560088105*^9, 3.739528489343952*^9, 3.739529385819673*^9, {
   3.7395305064459457`*^9, 3.739530519251287*^9}, 3.7395307150818243`*^9, 
   3.739533652568808*^9, 3.739540214002719*^9, 3.739541885151313*^9, 
   3.739542981131839*^9, 3.7395495397020817`*^9, 3.7395605096769743`*^9, 
   3.739560688646389*^9, 3.739631870693915*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"927c4f7b-67a1-4861-93fd-d85d3072b5c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"random", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.7396173160871487`*^9, 3.739617323386819*^9}, {
  3.73961743491724*^9, 3.739617439406527*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"96b2cfea-194d-474c-bc15-9e0e2cf3357b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.739617323912488*^9, {3.739617436460243*^9, 3.739617441842597*^9}, 
   3.739618787918149*^9, 3.7396271079057913`*^9, {3.739627530167704*^9, 
   3.7396275495965567`*^9}, 3.739627887850251*^9, 3.739630049613927*^9, 
   3.739631874158407*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"b239b34a-1a7f-42e8-a4e9-32aec9f5eae2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"generator", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#AbsoluteBatch", ",", "400"}], "]"}], "==", "0"}], ",", 
          RowBox[{"random", " ", "<=", " ", "2"}]}], "]"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"random", " ", "=", " ", 
           RowBox[{"random", " ", "+", " ", "1"}]}], ";", 
          RowBox[{"processed", " ", "=", " ", 
           RowBox[{"preprocess", "[", 
            RowBox[{"randomgame", "[", 
             RowBox[{"10", ",", "200", ",", "#Net"}], "]"}], "]"}]}]}], ")"}],
         ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"#AbsoluteBatch", ",", "400"}], "]"}], "==", "0"}], " ", 
           ",", 
           RowBox[{"(", 
            RowBox[{"processed", " ", "=", " ", 
             RowBox[{"preprocess", "[", 
              RowBox[{"game", "[", 
               RowBox[{"30", ",", "200", ",", "#Net"}], "]"}], "]"}]}], ")"}],
            ",", "0"}], "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pos", " ", "=", " ", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"processed", "[", "\"\<action\>\"", "]"}], "]"}]}], "}"}],
          ",", "#BatchSize"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", "[", "\"\<Input\>\"", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"processed", "[", "\"\<observation\>\"", "]"}], "[", 
        RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", "[", "\"\<Output\>\"", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"processed", "[", "\"\<action\>\"", "]"}], "[", 
        RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", "[", "\"\<Advantage\>\"", "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"processed", "[", "\"\<reward\>\"", "]"}], "[", 
        RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "result"}], "\[IndentingNewLine]", ")"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739526564229603*^9, 3.739526588989052*^9}, {
   3.739526998056408*^9, 3.7395270280758963`*^9}, {3.739527136272649*^9, 
   3.7395272475341997`*^9}, {3.739527356468335*^9, 3.739527397842885*^9}, {
   3.7395279452027197`*^9, 3.739527959960782*^9}, {3.739528079266355*^9, 
   3.739528080450221*^9}, {3.739528446426783*^9, 3.739528449006542*^9}, {
   3.739528500528824*^9, 3.739528501936198*^9}, {3.739528551363042*^9, 
   3.7395285658793907`*^9}, {3.739528602552985*^9, 3.73952865182971*^9}, 
   3.739528700399991*^9, {3.739528745366094*^9, 3.739528745575903*^9}, {
   3.739528777677457*^9, 3.739528815472865*^9}, {3.739528897179558*^9, 
   3.7395288999436274`*^9}, {3.73953041166775*^9, 3.739530419950438*^9}, {
   3.739533416822423*^9, 3.739533458142974*^9}, {3.739533553671427*^9, 
   3.7395335557448263`*^9}, {3.739533675688451*^9, 3.739533691199057*^9}, {
   3.739534292446599*^9, 3.7395344966094637`*^9}, {3.739534692108795*^9, 
   3.739534694234503*^9}, {3.739534803026949*^9, 3.73953480840674*^9}, {
   3.7395348445691423`*^9, 3.739534856172451*^9}, {3.739534943669042*^9, 
   3.739534951269638*^9}, {3.739535042063661*^9, 3.739535042307975*^9}, {
   3.739535218980692*^9, 3.739535236332795*^9}, {3.739535273943941*^9, 
   3.73953529942365*^9}, {3.739535741748658*^9, 3.7395357424868*^9}, 
   3.739536170460043*^9, {3.739536502854205*^9, 3.7395365162507887`*^9}, {
   3.739540039521529*^9, 3.739540040417345*^9}, {3.7395401601756783`*^9, 
   3.739540168276638*^9}, {3.739541133962633*^9, 3.739541136300219*^9}, {
   3.7395421828734837`*^9, 3.739542196501697*^9}, {3.7395425269173717`*^9, 
   3.7395425443323603`*^9}, {3.7395443304177303`*^9, 3.7395443547512836`*^9}, 
   3.739544388169199*^9, {3.739544459893568*^9, 3.739544514658739*^9}, 
   3.739544555568233*^9, 3.7395446669745073`*^9, {3.73954472560999*^9, 
   3.739544745498323*^9}, {3.7395447810918827`*^9, 3.739544786944454*^9}, {
   3.739544827327436*^9, 3.739544843340876*^9}, 3.739544910788804*^9, {
   3.739545003516303*^9, 3.739545004607786*^9}, {3.739545136392655*^9, 
   3.7395451370868483`*^9}, {3.739545419206686*^9, 3.7395454252837353`*^9}, {
   3.739545861719534*^9, 3.739545875042673*^9}, {3.7395466462351303`*^9, 
   3.739546664678789*^9}, {3.7395484096001673`*^9, 3.739548411391069*^9}, {
   3.739549763673913*^9, 3.7395497638501387`*^9}, {3.739550736761759*^9, 
   3.739550740652761*^9}, 3.7395606942563553`*^9, 3.739561597241188*^9, {
   3.7395632646569223`*^9, 3.739563267717955*^9}, {3.739570793818348*^9, 
   3.739570797066429*^9}, {3.7396158460332747`*^9, 3.739615853508765*^9}, {
   3.73961692215051*^9, 3.739616922763137*^9}, {3.739617064242036*^9, 
   3.739617064841353*^9}, {3.739617332029253*^9, 3.7396173944473763`*^9}, {
   3.7396174554366426`*^9, 3.739617459832244*^9}, {3.739617833249634*^9, 
   3.73961783357075*^9}, {3.7396183787447157`*^9, 3.7396183800179873`*^9}, 
   3.7396186563379717`*^9, {3.739618758013791*^9, 3.739618774756576*^9}, {
   3.739627259682446*^9, 3.739627259868341*^9}, {3.739627532388977*^9, 
   3.739627552055435*^9}, {3.7396277604771967`*^9, 3.739627772870775*^9}, {
   3.739627893644409*^9, 3.739627895504898*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"8ef0c876-546d-4ff3-a56e-7883ab03dd81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"policyNet", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"LinearLayer", "[", "16", "]"}], ",", "Ramp", ",", 
        RowBox[{"LinearLayer", "[", "16", "]"}], ",", "Ramp", ",", 
        RowBox[{"LinearLayer", "[", "]"}], ",", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", 
       RowBox[{"NetDecoder", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Class\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", "4"}]}], "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.739527878587989*^9, 3.739527878598819*^9}, {
   3.739528852626128*^9, 3.73952887148888*^9}, {3.739540331089356*^9, 
   3.739540332466283*^9}, {3.739541503030221*^9, 3.739541517308897*^9}, 
   3.739542395279646*^9, {3.7395492819381113`*^9, 3.73954928798013*^9}, {
   3.739549398794232*^9, 3.739549405481791*^9}, {3.739616817991057*^9, 
   3.739616826877006*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"31e249fe-9434-4545-8895-2252020ee7ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loss", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}], ",", 
      RowBox[{"ThreadingLayer", "[", 
       RowBox[{
        RowBox[{"LogisticSigmoid", "[", 
         RowBox[{"(", 
          RowBox[{"#1", "*", "#2"}], ")"}], "]"}], "&"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Advantage\>\"", "]"}], "\[Rule]", "2"}], 
      ",", 
      RowBox[{"1", "\[Rule]", "2"}]}], "}"}], ",", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7395291138150387`*^9, 3.73952913956413*^9}, {
   3.739626709427075*^9, 3.7396267168423777`*^9}, {3.739627172572526*^9, 
   3.739627194286044*^9}, {3.739627461645576*^9, 3.7396274699122143`*^9}, {
   3.739627628229155*^9, 3.7396276287197027`*^9}, 3.739627879044643*^9, {
   3.7396280991022587`*^9, 3.7396281152138643`*^9}, {3.7396306264973783`*^9, 
   3.739630626931473*^9}, {3.739630769783779*^9, 3.7396307803587227`*^9}, {
   3.739631064433859*^9, 3.739631084163743*^9}, {3.73963125381549*^9, 
   3.7396312582956877`*^9}, {3.7396314495962143`*^9, 
   3.7396314552707977`*^9}, {3.739631502193025*^9, 3.739631528738056*^9}, {
   3.7396368752593946`*^9, 3.7396368793387547`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"ffef52c0-1f7b-428c-9c67-da59f8c78039"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.2246467991473532`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Advantage\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Advantage", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"LogisticSigmoid", "[", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "]"}], "&"}], ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"Real\"", ",", "\"Real\""}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Shallow[LogisticSigmoid[# #2]& , {4, 3}], 
                    "Inputs" -> {"Real", "Real"}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"CE\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "2"}], "]"}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer[
                    "Index", "Input" -> 2, "Target" -> {
                    Restricted["Integer", 2]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Advantage\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.2246467991473532`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"2\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "2"], 
                    TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-3., 1.8369701987210297`*^-16}, {-2., 
                    1.0000000000000002`}, {-3., 1.0000000000000002`}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 8, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {218., 93.}, AspectRatio -> Full,
                     PlotRangePadding -> 0, 
                    ImagePadding -> {{26.500000000000004`, 26.5}, {24., 14.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Advantage"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Advantage" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NetEncoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "OutputForm" -> "Index", "Count" -> 
                    2], 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[2]]]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {}, 
                    "$Classes" -> 2], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {
                    LogisticSigmoid, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Advantage\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739528876256813*^9, 3.739528911040029*^9, 3.739528969375909*^9, 
   3.739529002817443*^9, 3.7395291404971037`*^9, 3.7395291965680103`*^9, 
   3.7395294263857*^9, 3.739529962674712*^9, 3.73953371019219*^9, 
   3.739540047110983*^9, 3.739540337005767*^9, 3.7395403859757853`*^9, 
   3.739541521502378*^9, 3.739541964476325*^9, 3.739542104942362*^9, 
   3.739542325011497*^9, 3.739542399332796*^9, 3.739542878743744*^9, 
   3.739542996363431*^9, 3.739545518093012*^9, 3.739546802454876*^9, 
   3.739547687797614*^9, 3.7395492933262653`*^9, 3.739549550534498*^9, 
   3.739550459845998*^9, 3.739550788925267*^9, 3.739550827140362*^9, {
   3.7395605177271833`*^9, 3.7395605448078423`*^9}, 3.739560705321809*^9, 
   3.739563250771571*^9, 3.7396158582395287`*^9, 3.739626719327592*^9, 
   3.739627195632433*^9, 3.739627470521262*^9, 3.7396276299910717`*^9, 
   3.739627880771817*^9, 3.7396281169282627`*^9, 3.7396306290290947`*^9, 
   3.739630782910578*^9, 3.7396310850533257`*^9, 3.739631259214926*^9, {
   3.739631522623489*^9, 3.739631529296227*^9}, 3.739631881151331*^9, 
   3.7396361860970163`*^9, 3.7396368799680147`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"574c8c75-9788-47e1-b07b-0f7afdda8948"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"random", " ", "=", " ", "0"}]], "Input",
 CellChangeTimes->{{3.739628185042692*^9, 3.739628186999517*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"09bf9650-b332-46ef-b67f-f9b70d5993ee"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7396281878531113`*^9, 3.7396284820088463`*^9, 
  3.739629685471531*^9, 3.739630789401327*^9, 3.739631092961499*^9, 
  3.7396312648425503`*^9, 3.739631582277931*^9, 3.739636187878023*^9, 
  3.7396368845293016`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"a2553e4b-b3ff-461d-9c25-ea20a8b348ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetTrain", "[", 
  RowBox[{"policyNet", ",", " ", "generator", ",", 
   RowBox[{"LossFunction", "\[Rule]", "loss"}], ",", 
   RowBox[{"BatchSize", "\[Rule]", "32"}], ",", 
   RowBox[{"MaxTrainingRounds", "\[Rule]", "2400"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739527888674446*^9, 3.739527925405257*^9}, {
   3.739534603888154*^9, 3.7395346193334084`*^9}, {3.739534715558992*^9, 
   3.739534717993936*^9}, {3.7395356478987713`*^9, 3.739535655002204*^9}, {
   3.7395357340582933`*^9, 3.73953573575904*^9}, {3.739535795790866*^9, 
   3.739535808029936*^9}, {3.73953586238418*^9, 3.73953586744709*^9}, {
   3.739536107449044*^9, 3.73953613760992*^9}, {3.739536269054021*^9, 
   3.739536281676323*^9}, {3.739536413727557*^9, 3.739536415997374*^9}, {
   3.739539714518433*^9, 3.739539730014888*^9}, {3.739540080572278*^9, 
   3.739540085611909*^9}, {3.739540146367692*^9, 3.739540148979556*^9}, {
   3.739540686921427*^9, 3.739540709033469*^9}, {3.7395422054752502`*^9, 
   3.7395422101914043`*^9}, {3.73954316055826*^9, 3.7395431609865*^9}, {
   3.739544245387568*^9, 3.7395442456425447`*^9}, {3.739545436754044*^9, 
   3.739545481626696*^9}, {3.7395456006097393`*^9, 3.7395456029906063`*^9}, 
   3.7395457429502907`*^9, {3.739546669672132*^9, 3.739546673880538*^9}, {
   3.739550767309229*^9, 3.739550820990655*^9}, {3.7395510398009157`*^9, 
   3.739551040649098*^9}, {3.739556144349305*^9, 3.7395561456089697`*^9}, {
   3.739558449549491*^9, 3.739558455111322*^9}, {3.739560524098967*^9, 
   3.7395605246594563`*^9}, {3.739571047437084*^9, 3.73957104877466*^9}, {
   3.739616882609857*^9, 3.7396168842070436`*^9}, {3.7396185867942047`*^9, 
   3.739618588935698*^9}, {3.7396188989566936`*^9, 3.739618903567546*^9}, {
   3.7396275460095987`*^9, 3.7396275478746853`*^9}, {3.739627781308584*^9, 
   3.739627781585541*^9}, {3.739628040478038*^9, 3.7396280731830053`*^9}, 
   3.739629646596654*^9, 3.7396296902493887`*^9, {3.739630082351756*^9, 
   3.739630093623536*^9}, {3.739630177004778*^9, 3.739630178895383*^9}, {
   3.7396306349115458`*^9, 3.739630636447446*^9}, {3.739631219821974*^9, 
   3.739631220067361*^9}, {3.739631749658396*^9, 3.739631750944319*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"13547223-8bd8-44f0-a9f5-e017dc713d2b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 1, "Dimensions" -> 2, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739527927076016*^9, {3.739527967497615*^9, 3.7395279752497063`*^9}, {
   3.7395280866472607`*^9, 3.739528088560205*^9}, 3.7395284577401743`*^9, 
   3.739528824558218*^9, 3.739528958292714*^9, 3.739529429884398*^9, 
   3.7395299727820253`*^9, 3.739530740196191*^9, 3.739534550021098*^9, {
   3.739534651715548*^9, 3.739534678647147*^9}, {3.7395347092995234`*^9, 
   3.739534723850621*^9}, 3.7395350037673683`*^9, 3.739535547717716*^9, 
   3.739535723370048*^9, 3.739535786911187*^9, 3.739535972346218*^9, 
   3.739536073897914*^9, {3.739536269915781*^9, 3.739536314587873*^9}, {
   3.7395363815423813`*^9, 3.739536381939905*^9}, 3.739536624535433*^9, 
   3.739539707438154*^9, 3.739539767155058*^9, 3.739540076688485*^9, 
   3.7395401268916063`*^9, 3.7395402076099586`*^9, {3.739540319745442*^9, 
   3.739540335355431*^9}, 3.739541061410613*^9, 3.739541427037033*^9, 
   3.739541628329698*^9, 3.7395418505974703`*^9, 3.739541956357814*^9, 
   3.739542028838397*^9, 3.739542167506876*^9, 3.7395422659214067`*^9, 
   3.739542385557334*^9, 3.7395424951175013`*^9, 3.73954291869049*^9, 
   3.739543333024661*^9, 3.7395441828860197`*^9, 3.739544279165464*^9, 
   3.73954432615753*^9, 3.739544380976798*^9, 3.739544420780068*^9, 
   3.7395445390747757`*^9, 3.73954465380096*^9, 3.739544711862039*^9, 
   3.73954476643272*^9, 3.739544884520788*^9, 3.739545039156023*^9, 
   3.739545146865966*^9, 3.7395452275885153`*^9, 3.739545409793127*^9, 
   3.739545452427573*^9, 3.739545491580048*^9, 3.7395455961854467`*^9, 
   3.73954571153577*^9, 3.739545856218815*^9, 3.739546409031714*^9, 
   3.7395467918832006`*^9, 3.7395472226018333`*^9, 3.739548626910865*^9, 
   3.739548943134248*^9, 3.7395492243793907`*^9, 3.7395493624914303`*^9, 
   3.739549656784514*^9, 3.739549750231317*^9, 3.7395502179401503`*^9, 
   3.739550583245092*^9, 3.7395507770009203`*^9, 3.7395508149065*^9, 
   3.7395510344585133`*^9, 3.7395513221427317`*^9, 3.7395537043302517`*^9, 
   3.73955418164715*^9, 3.739554866825945*^9, 3.739555304896864*^9, 
   3.7395560222559767`*^9, 3.7395566291930227`*^9, 3.7395584702384663`*^9, 
   3.7395585089702787`*^9, {3.739560533126236*^9, 3.739560540049274*^9}, 
   3.7395615340480413`*^9, 3.739561991440338*^9, 3.739563245414918*^9, 
   3.739563606626766*^9, 3.739564064486175*^9, 3.7395662321734943`*^9, 
   3.7395671823245*^9, 3.739568414674938*^9, 3.739568885861158*^9, 
   3.739569496914341*^9, 3.73957008487463*^9, 3.739571045436778*^9, 
   3.7395717211802473`*^9, 3.739572590215372*^9, 3.7396161651055*^9, 
   3.739617101836111*^9, 3.739617155871435*^9, 3.73961742811166*^9, 
   3.739617822967375*^9, 3.7396185486050386`*^9, 3.739618651765465*^9, 
   3.73961873525428*^9, 3.7396188666592484`*^9, 3.739619189768241*^9, 
   3.7396268894425507`*^9, 3.739627074853835*^9, 3.739627305437709*^9, 
   3.739627429251254*^9, {3.7396275250940104`*^9, 3.739627542055382*^9}, 
   3.739627608550774*^9, 3.739627747046595*^9, 3.739627872757814*^9, 
   3.739627998676075*^9, 3.73962809455582*^9, 3.73962817993174*^9, 
   3.739628401972241*^9, 3.739628478308378*^9, 3.7396296065682907`*^9, 
   3.739629666906439*^9, 3.739629976049718*^9, 3.739630128977412*^9, 
   3.73963054425154*^9, 3.739630762001876*^9, 3.739630843722768*^9, 
   3.739631191755143*^9, 3.739631572241555*^9, 3.739631736453679*^9, 
   3.739631782546088*^9, {3.739631889591555*^9, 3.7396318978162413`*^9}, {
   3.739631948677062*^9, 3.739631960308241*^9}, 3.739632013311781*^9, {
   3.73963215136938*^9, 3.7396321760484056`*^9}, 3.739634229623864*^9, 
   3.73963592944595*^9, 3.739636708973543*^9, 3.739637039202703*^9, 
   3.739637489982442*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"55a7781a-dd33-454b-ac1e-56ed08f4e107"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NeuralNetworks`NetAttachLoss", "[", 
  RowBox[{"policyNet", ",", "loss"}], "]"}]], "Input",
 CellChangeTimes->{{3.739528119843698*^9, 3.739528119849124*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"d0bf2b56-7962-4353-b726-d3fd13bf68a5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"OutputLoss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.4}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-0.9999999999999999, 1.}], 
                    Offset[{12, 12}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[0.4]], {-0.9999999999999999, 
                    1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"LossNet1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["LossNet1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[2], 
                    Skeleton[5]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999998`, 2.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Advantage\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Advantage", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"OutputLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["OutputLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Net\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"LossNet1\"", TraditionalForm], 
                    Offset[{0, -15}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Advantage\"", TraditionalForm], 
                    Offset[{0, -7}, {-1.9999999999999998`, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"OutputLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"2\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "2"], 
                    TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-1.4, 
                    1.4}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {-1.9999999999999998`, 
                    2.}, {6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {231.5, 157.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 38.49999999999999}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Nodes", "LossNet1"], 
                    NeuralNetworks`NetPath["Inputs", "Output"], 
                    NeuralNetworks`NetPath["Inputs", "Advantage"], 
                    NeuralNetworks`NetPath["Outputs", "OutputLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Output" -> NetEncoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "OutputForm" -> "Index", "Count" -> 
                    2], 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Advantage" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "OutputLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association["OutputDimensions" -> {16}, "$OutputSize" -> 
                    16, "$InputSize" -> 4, "$InputDimensions" -> {4}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association["OutputDimensions" -> {16}, "$OutputSize" -> 
                    16, "$InputSize" -> 16, "$InputDimensions" -> {16}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association["OutputDimensions" -> {2}, "$OutputSize" -> 2,
                     "$InputSize" -> 16, "$InputDimensions" -> {16}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{16}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]], "LossNet1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Advantage" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["TargetForm" -> "Index", 
                    "$InputDimensions" -> {}, "$Classes" -> 2], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[2]]], "Outputs" -> 
                    Association["Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Advantage"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"OutputLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"], "", "", "", ""}, {
                    StyleBox[
                    TemplateBox[{"\"Advantage\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739528120572123*^9, 3.73952834387879*^9, 
  3.739528408813562*^9, 3.739528463457369*^9, 3.739528829161687*^9, 
  3.739529439028666*^9, 3.739529979253852*^9, 3.739536386169477*^9, 
  3.739543015376947*^9, 3.739560750036607*^9, 3.739629672568192*^9, 
  3.739631964609112*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"45e7d836-5c43-49be-befd-1628924471d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomgame", "[", 
  RowBox[{"1", ",", "500", ",", "policyNet"}], "]"}]], "Input",
 CellChangeTimes->{{3.73954572479091*^9, 3.739545736900998*^9}, {
   3.739554422525872*^9, 3.739554423795176*^9}, {3.739563173887261*^9, 
   3.739563190283594*^9}, 3.739566381244129*^9, 3.739567204777055*^9, 
   3.7395676633233624`*^9, 3.739568076175631*^9, 3.739570176302146*^9, 
   3.73957170964872*^9, {3.739571772259748*^9, 3.7395717739828043`*^9}, {
   3.739571870418187*^9, 3.73957190075006*^9}, 3.73957276883849*^9, {
   3.739616190691347*^9, 3.7396161919612093`*^9}, 3.7396164128475847`*^9, {
   3.7396171251541367`*^9, 3.7396171269575787`*^9}, {3.7396185535125523`*^9, 
   3.739618553770817*^9}, {3.7396312043721247`*^9, 3.739631205015751*^9}, {
   3.739631985074472*^9, 3.739631990497671*^9}, {3.739632036718917*^9, 
   3.739632040467915*^9}, {3.7396321890137672`*^9, 3.739632190258587*^9}, {
   3.7396343082903633`*^9, 3.7396343088375673`*^9}, {3.7396360661346397`*^9, 
   3.7396360685022793`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e95e29fe-c753-4feb-b4f4-cb5895e90585"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"observation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.030873154751038676`", ",", 
         RowBox[{"-", "0.02306131341165232`"}], ",", 
         RowBox[{"-", "0.034268311506513105`"}], ",", 
         "0.047672120359095335`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.03041192848280563`", ",", 
         RowBox[{"-", "0.21767555171187772`"}], ",", 
         RowBox[{"-", "0.0333148690993312`"}], ",", "0.3293491786034393`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.026058417448568075`", ",", 
         RowBox[{"-", "0.41230779691348995`"}], ",", 
         RowBox[{"-", "0.026727885527262414`"}], ",", "0.6113427876742226`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01781226151029828`", ",", 
         RowBox[{"-", "0.21682267161647242`"}], ",", 
         RowBox[{"-", "0.014501029773777962`"}], ",", "0.3103627686925144`"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01347580807796883`", ",", 
         RowBox[{"-", "0.021497151390402286`"}], ",", 
         RowBox[{"-", "0.008293774399927675`"}], ",", 
         "0.013142139240948536`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.013045865050160784`", ",", 
         RowBox[{"-", "0.21649918314337274`"}], ",", 
         RowBox[{"-", "0.008030931615108703`"}], ",", 
         "0.30319678505017505`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.008715881387293328`", ",", 
         RowBox[{"-", "0.4115057640014729`"}], ",", 
         RowBox[{"-", "0.001966995914105202`"}], ",", "0.593336155034996`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.00048576610726387`", ",", 
         RowBox[{"-", "0.6066001260485636`"}], ",", "0.00989972718659472`", 
         ",", "0.8853988355542441`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.011646236413707402`"}], ",", 
         RowBox[{"-", "0.41161396904673514`"}], ",", "0.0276077038976796`", 
         ",", "0.595844404341825`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.019878515794642105`"}], ",", 
         RowBox[{"-", "0.21688904723199454`"}], ",", "0.0395245919845161`", 
         ",", "0.31198396082474394`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.024216296739281995`"}], ",", 
         RowBox[{"-", "0.41255114263479503`"}], ",", "0.04576427120101098`", 
         ",", "0.6168650920220005`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.03246731959197789`"}], ",", 
         RowBox[{"-", "0.6082815467383963`"}], ",", "0.05810157304145099`", 
         ",", "0.9236033028452255`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.04463295052674582`"}], ",", 
         RowBox[{"-", "0.8041382344479481`"}], ",", "0.0765736390983555`", 
         ",", "1.2339648484883983`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.06071571521570478`"}], ",", 
         RowBox[{"-", "1.0001564994868581`"}], ",", "0.10125293606812347`", 
         ",", "1.5496213048560668`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.08071884520544194`"}], ",", 
         RowBox[{"-", "1.1963371912563145`"}], ",", "0.1322453621652448`", 
         ",", "1.8721026986480933`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.10464558903056823`"}], ",", 
         RowBox[{"-", "1.0028850438991008`"}], ",", "0.16968741613820665`", 
         ",", "1.6232251288078523`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.12470328990855024`"}], ",", 
         RowBox[{"-", "1.1995496234507628`"}], ",", "0.2021519187143637`", 
         ",", "1.9636341691131065`"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"action\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "1", ",", "0", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"reward\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
       "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",",
        "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.739572650541759*^9, 3.7395727601191053`*^9, 3.7395730484855833`*^9, 
   3.739616227377367*^9, 3.739616340829843*^9, 3.73961665386967*^9, 
   3.739617128344905*^9, {3.739617172142705*^9, 3.739617197568356*^9}, {
   3.739618556228506*^9, 3.7396185730749474`*^9}, {3.7396188800034018`*^9, 
   3.7396188937363*^9}, {3.739626913295561*^9, 3.7396269310130377`*^9}, 
   3.739627097255389*^9, 3.739627444697246*^9, 3.739627753076911*^9, {
   3.739628408432439*^9, 3.739628426851733*^9}, {3.739629615407069*^9, 
   3.739629639338502*^9}, 3.739629677964074*^9, 3.73963004099218*^9, 
   3.739630616084494*^9, 3.7396308604114037`*^9, {3.7396311992349167`*^9, 
   3.7396312092142963`*^9}, 3.739631744827182*^9, {3.7396319772328033`*^9, 
   3.739631994624758*^9}, {3.739632041406744*^9, 3.739632060751369*^9}, 
   3.739632103710479*^9, 3.7396321369151363`*^9, 3.739632242009848*^9, {
   3.739634388651897*^9, 3.7396344051368437`*^9}, 3.7396360702719603`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"3a837dc6-f60a-4cb3-ad36-f2c0dd3595fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{"preprocess", "[", 
    RowBox[{"game", "[", 
     RowBox[{"5", ",", "200", ",", "policyNet"}], "]"}], "]"}], "[", 
   "\"\<action\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.739571940441454*^9, {3.739632249596599*^9, 3.7396322796840677`*^9}, 
   3.739632358095067*^9, 3.739634260164364*^9, {3.739635953451724*^9, 
   3.7396359539661283`*^9}, {3.7396359943809013`*^9, 3.739635994973011*^9}, {
   3.7396360768965063`*^9, 3.739636078191824*^9}, {3.739636115650601*^9, 
   3.739636134781783*^9}, {3.73963685232542*^9, 3.739636852777899*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"4bae2fb4-4835-4946-8e6e-2b84730d623d"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{
  3.739571940622463*^9, 3.7396322593309507`*^9, 3.739632331822198*^9, 
   3.739632926786153*^9, {3.7396342837468433`*^9, 3.7396342946165113`*^9}, 
   3.739634510336508*^9, 3.7396359832228327`*^9, 3.739636051374771*^9, {
   3.739636084579997*^9, 3.7396361308027763`*^9}, 3.739636855958362*^9, 
   3.739637065058057*^9, 3.739637529723029*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"dbcc3c19-fe0c-4da3-9d34-858d3ae8255a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<best.wlnet\>\"", ",", "testNet"}], "]"}]], "Input",
 CellChangeTimes->{{3.739558625785698*^9, 3.7395586334729147`*^9}, {
  3.7396158061787567`*^9, 3.7396158275498857`*^9}, {3.739632349944851*^9, 
  3.739632354355536*^9}, {3.739636059716749*^9, 3.739636061053385*^9}, {
  3.739636147927957*^9, 3.739636152078388*^9}, {3.739638437578526*^9, 
  3.739638439354389*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"f808911e-4676-4536-bb83-47bc3a820130"],

Cell[BoxData["\<\"best.wlnet\"\>"], "Output",
 CellChangeTimes->{3.7395701934684134`*^9, 3.739571338209794*^9, 
  3.7396158295469227`*^9, 3.73963235492173*^9, 3.739636061953971*^9, 
  3.739636152541087*^9, 3.7396384052880173`*^9, 3.739638439950512*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"301e0e3f-2341-473f-9112-7f6098a0845e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abort", "[", "]"}]], "Input",
 CellChangeTimes->{{3.739558733301207*^9, 3.7395587349992313`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"96753c57-349a-49a8-97b1-9761d393f4ff"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7395713263323402`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"d5552697-fab2-449b-8778-227005fd315a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testNet", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<average200.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.739571952852504*^9, 3.739571967192052*^9}, {
  3.739636164495682*^9, 3.739636167183302*^9}, {3.739638429196685*^9, 
  3.7396384342345324`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5ef405eb-04ea-4565-9fc0-99d44d985c34"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 4}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1}, "InputDepth" -> 1, "Dimensions" -> 2, 
                    "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739571969402698*^9, 3.7396361685153923`*^9, {3.7396384262846613`*^9, 
   3.739638434887097*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"2cb51bd2-c188-470d-bb27-b47f85aaa589"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{"preprocess", "[", 
    RowBox[{"game", "[", 
     RowBox[{"5", ",", "200", ",", "testNet"}], "]"}], "]"}], "[", 
   "\"\<action\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739571978359755*^9, 3.7395719796592283`*^9}, 
   3.739636171173135*^9, {3.739638444433859*^9, 3.739638444804558*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"f7f10f06-74b2-48c7-8213-76ccd40808ed"],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{3.73957200979781*^9, 3.739572169610373*^9, 
  3.739572685224275*^9, 3.739572718038978*^9, 3.7396300915753517`*^9, 
  3.7396301670149117`*^9, 3.739636177895033*^9, 3.7396384793051662`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"c962bc57-44c9-4680-b20b-1d5f033678cb"]
}, Open  ]]
},
WindowSize->{808, 713},
WindowMargins->{{300, Automatic}, {Automatic, 39}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 665, 13, 94, "Input",ExpressionUUID->"f020b06a-07e2-4fe4-be8a-bf49add46fa3"],
Cell[1248, 37, 227, 3, 34, "Output",ExpressionUUID->"c9ae8e94-69ff-4827-8b11-da3a7fb47dc9"],
Cell[1478, 42, 241, 4, 34, "Output",ExpressionUUID->"8556996b-9b4e-4612-be79-7ea78eb1add5"],
Cell[1722, 48, 184, 2, 34, "Output",ExpressionUUID->"bfae3211-59e1-458a-bf9f-9238a2a5aef3"]
}, Open  ]],
Cell[1921, 53, 239, 7, 30, "Input",ExpressionUUID->"473bd352-9927-4ae9-9733-4a10e6fa1520"],
Cell[CellGroupData[{
Cell[2185, 64, 456, 7, 52, "Input",ExpressionUUID->"9695405f-7c86-4748-948f-eb2e70bf8506"],
Cell[2644, 73, 5555, 122, 395, "Output",ExpressionUUID->"8f79a30d-9211-40c7-8718-3342a396ae0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8236, 200, 310, 6, 30, "Input",ExpressionUUID->"32ad068d-f2d8-4a51-bc4d-475afb445c37"],
Cell[8549, 208, 4239, 120, 148, "Print",ExpressionUUID->"6307ce76-2b8a-4175-bf09-167b79a441c1"]
}, Open  ]],
Cell[12803, 331, 179, 3, 30, "Input",ExpressionUUID->"916125f5-d5af-4d03-95de-fb43eface4a7"],
Cell[12985, 336, 5078, 106, 682, "Input",ExpressionUUID->"d28a1cef-b0b0-41e4-89dc-427bb2361533"],
Cell[CellGroupData[{
Cell[18088, 446, 335, 6, 30, "Input",ExpressionUUID->"9249d780-709f-4ade-8cd7-45e0dfd35511"],
Cell[18426, 454, 197, 4, 24, "Print",ExpressionUUID->"13bc3135-8f57-480c-86ce-6d8a832a83e1"],
Cell[18626, 460, 6477, 153, 395, "Output",ExpressionUUID->"c5d5a078-4b1e-4cd4-b78c-1373093e5d3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25140, 618, 6014, 119, 724, "Input",ExpressionUUID->"e93b8485-4c79-449d-a4ee-74cd222b7cac"],
Cell[31157, 739, 3837, 90, 476, "Output",ExpressionUUID->"29e3657e-ff22-480e-bbce-1494058f66ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35031, 834, 1019, 23, 94, "Input",ExpressionUUID->"047836aa-b3f9-4ea0-8fd7-5a96a22ecbf1"],
Cell[36053, 859, 878, 22, 34, "Output",ExpressionUUID->"cd873a34-d2a8-4c20-bb90-3c549bb01182"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36968, 886, 1624, 34, 178, "Input",ExpressionUUID->"56fd5944-c546-42d9-a028-7de2902229a9"],
Cell[38595, 922, 1295, 29, 119, "Output",ExpressionUUID->"927c4f7b-67a1-4861-93fd-d85d3072b5c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39927, 956, 258, 4, 30, "Input",ExpressionUUID->"96b2cfea-194d-474c-bc15-9e0e2cf3357b"],
Cell[40188, 962, 369, 6, 34, "Output",ExpressionUUID->"b239b34a-1a7f-42e8-a4e9-32aec9f5eae2"]
}, Open  ]],
Cell[40572, 971, 5773, 105, 262, "Input",ExpressionUUID->"8ef0c876-546d-4ff3-a56e-7883ab03dd81"],
Cell[46348, 1078, 1186, 26, 94, "Input",ExpressionUUID->"31e249fe-9434-4545-8895-2252020ee7ea"],
Cell[CellGroupData[{
Cell[47559, 1108, 1585, 35, 73, "Input",ExpressionUUID->"ffef52c0-1f7b-428c-9c67-da59f8c78039"],
Cell[49147, 1145, 35738, 727, 75, "Output",ExpressionUUID->"574c8c75-9788-47e1-b07b-0f7afdda8948"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84922, 1877, 209, 3, 30, "Input",ExpressionUUID->"09bf9650-b332-46ef-b67f-f9b70d5993ee"],
Cell[85134, 1882, 342, 5, 34, "Output",ExpressionUUID->"a2553e4b-b3ff-461d-9c25-ea20a8b348ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85513, 1892, 2266, 32, 52, "Input",ExpressionUUID->"13547223-8bd8-44f0-a9f5-e017dc713d2b"],
Cell[87782, 1926, 31882, 626, 76, "Output",ExpressionUUID->"55a7781a-dd33-454b-ac1e-56ed08f4e107"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119701, 2557, 260, 4, 30, "Input",ExpressionUUID->"d0bf2b56-7962-4353-b726-d3fd13bf68a5"],
Cell[119964, 2563, 47487, 937, 75, "Output",ExpressionUUID->"45e7d836-5c43-49be-befd-1628924471d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167488, 3505, 1095, 16, 30, "Input",ExpressionUUID->"e95e29fe-c753-4feb-b4f4-cb5895e90585"],
Cell[168586, 3523, 5649, 120, 332, "Output",ExpressionUUID->"3a837dc6-f60a-4cb3-ad36-f2c0dd3595fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174272, 3648, 688, 13, 30, "Input",ExpressionUUID->"4bae2fb4-4835-4946-8e6e-2b84730d623d"],
Cell[174963, 3663, 470, 7, 34, "Output",ExpressionUUID->"dbcc3c19-fe0c-4da3-9d34-858d3ae8255a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175470, 3675, 498, 8, 30, "Input",ExpressionUUID->"f808911e-4676-4536-bb83-47bc3a820130"],
Cell[175971, 3685, 331, 4, 34, "Output",ExpressionUUID->"301e0e3f-2341-473f-9112-7f6098a0845e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176339, 3694, 200, 3, 30, "Input",ExpressionUUID->"96753c57-349a-49a8-97b1-9761d393f4ff"],
Cell[176542, 3699, 158, 2, 34, "Output",ExpressionUUID->"d5552697-fab2-449b-8778-227005fd315a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176737, 3706, 366, 6, 30, "Input",ExpressionUUID->"5ef405eb-04ea-4565-9fc0-99d44d985c34"],
Cell[177106, 3714, 28376, 577, 76, "Output",ExpressionUUID->"2cb51bd2-c188-470d-bb27-b47f85aaa589"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205519, 4296, 438, 9, 30, "Input",ExpressionUUID->"f7f10f06-74b2-48c7-8213-76ccd40808ed"],
Cell[205960, 4307, 317, 4, 34, "Output",ExpressionUUID->"c962bc57-44c9-4680-b20b-1d5f033678cb"]
}, Open  ]]
}
]
*)

